;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TMain = type { %struct.__lcpl_rtti* }
; Name of classes
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

@string_constant.0 = constant [2 x i8] c"(\00"
@_string_constant.0 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.0, i32 0, i32 0) }
@string_constant.1 = constant [2 x i8] c")\00"
@_string_constant.1 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.1, i32 0, i32 0) }
@string_constant.2 = constant [2 x i8] c"a\00"
@_string_constant.2 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.2, i32 0, i32 0) }
@string_constant.3 = constant [1 x i8] c"\00"
@_string_constant.3 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.3, i32 0, i32 0) }
@string_constant.4 = constant [2 x i8] c"c\00"
@_string_constant.4 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.4, i32 0, i32 0) }
@string_constant.5 = constant [2 x i8] c"d\00"
@_string_constant.5 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.5, i32 0, i32 0) }
@string_constant.6 = constant [2 x i8] c"e\00"
@_string_constant.6 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.6, i32 0, i32 0) }
@string_constant.7 = constant [2 x i8] c"f\00"
@_string_constant.7 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.7, i32 0, i32 0) }
@string_constant.8 = constant [2 x i8] c"g\00"
@_string_constant.8 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.8, i32 0, i32 0) }
@string_constant.9 = constant [1 x i8] c"\00"
@_string_constant.9 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.9, i32 0, i32 0) }
@string_constant.10 = constant [2 x i8] c"i\00"
@_string_constant.10 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.10, i32 0, i32 0) }
@string_constant.11 = constant [2 x i8] c"j\00"
@_string_constant.11 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.11, i32 0, i32 0) }
@string_constant.12 = constant [2 x i8] c"k\00"
@_string_constant.12 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.12, i32 0, i32 0) }
@string_constant.13 = constant [2 x i8] c"l\00"
@_string_constant.13 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.13, i32 0, i32 0) }
@string_constant.14 = constant [2 x i8] c"m\00"
@_string_constant.14 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.14, i32 0, i32 0) }
@string_constant.15 = constant [2 x i8] c"n\00"
@_string_constant.15 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.15, i32 0, i32 0) }
@string_constant.16 = constant [2 x i8] c"o\00"
@_string_constant.16 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.16, i32 0, i32 0) }
@string_constant.17 = constant [2 x i8] c"\0A\00"
@_string_constant.17 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.17, i32 0, i32 0) }
; Runtime type information and virtual tables
;
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TMain*, %struct.TString*, %struct.TString*, %struct.TString*)* @M4_Main_paranthese to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

ret void
}

define %struct.TString* @M4_Main_paranthese (%struct.TMain* %self, %struct.TString* %a, %struct.TString* %b, %struct.TString* %c) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = alloca %struct.TString*
	store %struct.TString* %a, %struct.TString** %2
	%3 = alloca %struct.TString*
	store %struct.TString* %b, %struct.TString** %3
	%4 = alloca %struct.TString*
	store %struct.TString* %c, %struct.TString** %4
	%5 = load %struct.TString** %2
	%6 = call %struct.TString* @M6_String_concat(%struct.TString* %5, %struct.TString* @_string_constant.0)
	%7 = load %struct.TString** %3
	%8 = call %struct.TString* @M6_String_concat(%struct.TString* %6, %struct.TString* %7)
	%9 = call %struct.TString* @M6_String_concat(%struct.TString* %8, %struct.TString* @_string_constant.1)
	%10 = load %struct.TString** %4
	%11 = call %struct.TString* @M6_String_concat(%struct.TString* %9, %struct.TString* %10)
	ret %struct.TString* %11
}
define void @M4_Main_main (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = alloca %struct.TString*
	%3 = load %struct.TMain** %1
	%4 = bitcast %struct.TMain* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.TMain* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 4
	%8 = load i8** %7
	%9 = bitcast i8* %8 to %struct.TString* (%struct.TMain*, %struct.TString*, %struct.TString*, %struct.TString*)*  ; Convert char * into function pointer
	%10 = load %struct.TMain** %1
	%11 = bitcast %struct.TMain* %10 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %11)
	%12 = getelementptr %struct.TMain* %10, i32 0, i32 0   ; Locate address of RTTI pointer
	%13 = load %struct.__lcpl_rtti** %12         ; Load RTTI pointer
	%14 = getelementptr %struct.__lcpl_rtti* %13, i32 0, i32 3, i32 4
	%15 = load i8** %14
	%16 = bitcast i8* %15 to %struct.TString* (%struct.TMain*, %struct.TString*, %struct.TString*, %struct.TString*)*  ; Convert char * into function pointer
	%17 = call %struct.TString* %16(%struct.TMain* %10, %struct.TString* @_string_constant.2, %struct.TString* @_string_constant.9, %struct.TString* @_string_constant.4)

	%18 = load %struct.TMain** %1
	%19 = bitcast %struct.TMain* %18 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %19)
	%20 = getelementptr %struct.TMain* %18, i32 0, i32 0   ; Locate address of RTTI pointer
	%21 = load %struct.__lcpl_rtti** %20         ; Load RTTI pointer
	%22 = getelementptr %struct.__lcpl_rtti* %21, i32 0, i32 3, i32 4
	%23 = load i8** %22
	%24 = bitcast i8* %23 to %struct.TString* (%struct.TMain*, %struct.TString*, %struct.TString*, %struct.TString*)*  ; Convert char * into function pointer
	%25 = load %struct.TMain** %1
	%26 = bitcast %struct.TMain* %25 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %26)
	%27 = getelementptr %struct.TMain* %25, i32 0, i32 0   ; Locate address of RTTI pointer
	%28 = load %struct.__lcpl_rtti** %27         ; Load RTTI pointer
	%29 = getelementptr %struct.__lcpl_rtti* %28, i32 0, i32 3, i32 4
	%30 = load i8** %29
	%31 = bitcast i8* %30 to %struct.TString* (%struct.TMain*, %struct.TString*, %struct.TString*, %struct.TString*)*  ; Convert char * into function pointer
	%32 = call %struct.TString* %31(%struct.TMain* %25, %struct.TString* @_string_constant.5, %struct.TString* @_string_constant.6, %struct.TString* @_string_constant.7)

	%33 = load %struct.TMain** %1
	%34 = bitcast %struct.TMain* %33 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %34)
	%35 = getelementptr %struct.TMain* %33, i32 0, i32 0   ; Locate address of RTTI pointer
	%36 = load %struct.__lcpl_rtti** %35         ; Load RTTI pointer
	%37 = getelementptr %struct.__lcpl_rtti* %36, i32 0, i32 3, i32 4
	%38 = load i8** %37
	%39 = bitcast i8* %38 to %struct.TString* (%struct.TMain*, %struct.TString*, %struct.TString*, %struct.TString*)*  ; Convert char * into function pointer
	%40 = call %struct.TString* %39(%struct.TMain* %33, %struct.TString* @_string_constant.8, %struct.TString* @_string_constant.9, %struct.TString* @_string_constant.10)

	%41 = load %struct.TMain** %1
	%42 = bitcast %struct.TMain* %41 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %42)
	%43 = getelementptr %struct.TMain* %41, i32 0, i32 0   ; Locate address of RTTI pointer
	%44 = load %struct.__lcpl_rtti** %43         ; Load RTTI pointer
	%45 = getelementptr %struct.__lcpl_rtti* %44, i32 0, i32 3, i32 4
	%46 = load i8** %45
	%47 = bitcast i8* %46 to %struct.TString* (%struct.TMain*, %struct.TString*, %struct.TString*, %struct.TString*)*  ; Convert char * into function pointer
	%48 = call %struct.TString* %47(%struct.TMain* %41, %struct.TString* @_string_constant.11, %struct.TString* @_string_constant.12, %struct.TString* @_string_constant.13)

	%49 = call %struct.TString* %24(%struct.TMain* %18, %struct.TString* %32, %struct.TString* %40, %struct.TString* %48)

	%50 = load %struct.TMain** %1
	%51 = bitcast %struct.TMain* %50 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %51)
	%52 = getelementptr %struct.TMain* %50, i32 0, i32 0   ; Locate address of RTTI pointer
	%53 = load %struct.__lcpl_rtti** %52         ; Load RTTI pointer
	%54 = getelementptr %struct.__lcpl_rtti* %53, i32 0, i32 3, i32 4
	%55 = load i8** %54
	%56 = bitcast i8* %55 to %struct.TString* (%struct.TMain*, %struct.TString*, %struct.TString*, %struct.TString*)*  ; Convert char * into function pointer
	%57 = call %struct.TString* %56(%struct.TMain* %50, %struct.TString* @_string_constant.14, %struct.TString* @_string_constant.15, %struct.TString* @_string_constant.16)

	%58 = call %struct.TString* %9(%struct.TMain* %3, %struct.TString* %17, %struct.TString* %49, %struct.TString* %57)

	store %struct.TString* %58, %struct.TString** %2
	%59 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RIO* @RIO to %struct.__lcpl_rtti*))
	%60 = bitcast i8* %59 to %struct.TIO*
	%61 = bitcast %struct.TIO* %60 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %61)
	%62 = getelementptr %struct.TIO* %60, i32 0, i32 0   ; Locate address of RTTI pointer
	%63 = load %struct.__lcpl_rtti** %62         ; Load RTTI pointer
	%64 = getelementptr %struct.__lcpl_rtti* %63, i32 0, i32 3, i32 5
	%65 = load i8** %64
	%66 = bitcast i8* %65 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%67 = load %struct.TString** %2
	%68 = call %struct.TString* @M6_String_concat(%struct.TString* %67, %struct.TString* @_string_constant.17)
	%69 = load %struct.TString** %2
	%70 = bitcast %struct.TString* %69 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %70)
	%71 = getelementptr %struct.TString* %69, i32 0, i32 0   ; Locate address of RTTI pointer
	%72 = load %struct.__lcpl_rtti** %71         ; Load RTTI pointer
	%73 = getelementptr %struct.__lcpl_rtti* %72, i32 0, i32 3, i32 4
	%74 = load i8** %73
	%75 = bitcast i8* %74 to i32 (%struct.TString*)*  ; Convert char * into function pointer
	%76 = call i32 %75(%struct.TString* %69)

%77 = udiv i32 %76, 2
	%78 = load %struct.TString** %2
	%79 = call %struct.TString* @M6_String_substring(%struct.TString* %%78, i32 0, i32 %77)
	%1 = call %struct.TString* @M6_String_concat(%struct.TString* %68, %struct.TString* %0)
	%2 = call %struct.TIO* %66(%struct.TIO* %60, %struct.TString* %1)

	ret void
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 5
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
