!!ro.pub.cs.lcpl.Program
classes:
- features:
  - !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.LocalDefinition
        init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 5, type: null, value: 10}
        lineNumber: 5
        name: a
        scope: !!ro.pub.cs.lcpl.LocalDefinition
          init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 5, type: null, value: 20}
          lineNumber: 5
          name: b
          scope: !!ro.pub.cs.lcpl.Block
            expressions:
            - !!ro.pub.cs.lcpl.LocalDefinition
              init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 6, type: null, value: 30}
              lineNumber: 6
              name: c
              scope: !!ro.pub.cs.lcpl.Block
                expressions:
                - !!ro.pub.cs.lcpl.Assignment
                  e1: !!ro.pub.cs.lcpl.Addition
                    e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 7, name: a, type: null}
                    e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 7, name: c, type: null}
                    lineNumber: 7
                    type: null
                  lineNumber: 7
                  symbol: a
                  type: null
                - !!ro.pub.cs.lcpl.Addition
                  e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 8, name: a, type: null}
                  e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 8, name: b, type: null}
                  lineNumber: 8
                  type: null
                - !!ro.pub.cs.lcpl.LocalDefinition
                  init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 9, type: null, value: 0}
                  lineNumber: 9
                  name: a
                  scope: !!ro.pub.cs.lcpl.Block
                    expressions:
                    - !!ro.pub.cs.lcpl.LocalDefinition
                      init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 10, type: null,
                        value: 1}
                      lineNumber: 10
                      name: b
                      scope: !!ro.pub.cs.lcpl.Block
                        expressions:
                        - !!ro.pub.cs.lcpl.IfStatement
                          condition: !!ro.pub.cs.lcpl.EqualComparison
                            e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 11, name: a,
                              type: null}
                            e2: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 11, type: null,
                              value: 0}
                            lineNumber: 11
                            type: null
                          ifExpr: !!ro.pub.cs.lcpl.Block
                            expressions:
                            - !!ro.pub.cs.lcpl.LocalDefinition
                              init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 12,
                                type: null, value: 2}
                              lineNumber: 12
                              name: a
                              scope: !!ro.pub.cs.lcpl.Block
                                expressions:
                                - !!ro.pub.cs.lcpl.Assignment
                                  e1: !!ro.pub.cs.lcpl.Addition
                                    e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 13, name: b,
                                      type: null}
                                    e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 13, name: a,
                                      type: null}
                                    lineNumber: 13
                                    type: null
                                  lineNumber: 13
                                  symbol: b
                                  type: null
                                lineNumber: 13
                                type: null
                              type: Int
                            lineNumber: 12
                            type: null
                          lineNumber: 11
                          thenExpr: null
                          type: null
                        - !!ro.pub.cs.lcpl.LocalDefinition
                          init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 15, type: null,
                            value: 2}
                          lineNumber: 15
                          name: c
                          scope: !!ro.pub.cs.lcpl.Block
                            expressions:
                            - !!ro.pub.cs.lcpl.Dispatch
                              arguments:
                              - !!ro.pub.cs.lcpl.Addition
                                e1: !!ro.pub.cs.lcpl.Addition
                                  e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 16, name: a,
                                    type: null}
                                  e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 16, name: b,
                                    type: null}
                                  lineNumber: 16
                                  type: null
                                e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 16, name: c,
                                  type: null}
                                lineNumber: 16
                                type: null
                              lineNumber: 16
                              name: out
                              object: null
                              type: null
                            lineNumber: 16
                            type: null
                          type: Int
                        lineNumber: 11
                        type: null
                      type: Int
                    lineNumber: 10
                    type: null
                  type: Int
                lineNumber: 7
                type: null
              type: Int
            lineNumber: 6
            type: null
          type: Int
        type: Int
      lineNumber: 5
      type: null
    lineNumber: 4
    name: main
    parameters: []
    returnType: void
  lineNumber: 3
  name: Main
  parent: IO
lineNumber: 3

