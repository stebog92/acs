;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.Tm = type { %struct.__lcpl_rtti* , %struct.TString*, %struct.TString*}
%struct.Tmm = type { %struct.__lcpl_rtti* }
%struct.Tm_m = type { %struct.__lcpl_rtti* }
%struct.TMain = type { %struct.__lcpl_rtti* }
; Name of classes
@class_name.m = internal constant [2 x i8] c"m\00"
@Nm = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.m, i32 0, i32 0) }
@class_name.mm = internal constant [3 x i8] c"mm\00"
@Nmm = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 2, i8* getelementptr ([3 x i8]* @class_name.mm, i32 0, i32 0) }
@class_name.m_m = internal constant [4 x i8] c"m_m\00"
@Nm_m = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 3, i8* getelementptr ([4 x i8]* @class_name.m_m, i32 0, i32 0) }
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

@string_constant.0 = constant [9 x i8] c"Infinite\00"
@_string_constant.0 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 8, i8* getelementptr ([9 x i8]* @string_constant.0, i32 0, i32 0) }
@string_constant.1 = constant [10 x i8] c" monkeys \00"
@_string_constant.1 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 9, i8* getelementptr ([10 x i8]* @string_constant.1, i32 0, i32 0) }
@string_constant.2 = constant [2 x i8] c" \00"
@_string_constant.2 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.2, i32 0, i32 0) }
@string_constant.3 = constant [7 x i8] c"write \00"
@_string_constant.3 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 6, i8* getelementptr ([7 x i8]* @string_constant.3, i32 0, i32 0) }
@string_constant.4 = constant [8 x i8] c"Macbeth\00"
@_string_constant.4 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 7, i8* getelementptr ([8 x i8]* @string_constant.4, i32 0, i32 0) }
@string_constant.5 = constant [2 x i8] c".\00"
@_string_constant.5 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.5, i32 0, i32 0) }
@string_constant.6 = constant [2 x i8] c".\00"
@_string_constant.6 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.6, i32 0, i32 0) }
@string_constant.7 = constant [4 x i8] c"can\00"
@_string_constant.7 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 3, i8* getelementptr ([4 x i8]* @string_constant.7, i32 0, i32 0) }
@string_constant.8 = constant [9 x i8] c"Infinite\00"
@_string_constant.8 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 8, i8* getelementptr ([9 x i8]* @string_constant.8, i32 0, i32 0) }
@string_constant.9 = constant [10 x i8] c" monkeys \00"
@_string_constant.9 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 9, i8* getelementptr ([10 x i8]* @string_constant.9, i32 0, i32 0) }
@string_constant.10 = constant [2 x i8] c" \00"
@_string_constant.10 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.10, i32 0, i32 0) }
@string_constant.11 = constant [7 x i8] c"write \00"
@_string_constant.11 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 6, i8* getelementptr ([7 x i8]* @string_constant.11, i32 0, i32 0) }
@string_constant.12 = constant [8 x i8] c"Macbeth\00"
@_string_constant.12 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 7, i8* getelementptr ([8 x i8]* @string_constant.12, i32 0, i32 0) }
@string_constant.13 = constant [2 x i8] c".\00"
@_string_constant.13 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.13, i32 0, i32 0) }
@string_constant.14 = constant [2 x i8] c".\00"
@_string_constant.14 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.14, i32 0, i32 0) }
@string_constant.15 = constant [4 x i8] c"can\00"
@_string_constant.15 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 3, i8* getelementptr ([4 x i8]* @string_constant.15, i32 0, i32 0) }
@string_constant.16 = constant [22 x i8] c"are expensive to feed\00"
@_string_constant.16 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 21, i8* getelementptr ([22 x i8]* @string_constant.16, i32 0, i32 0) }
@string_constant.17 = constant [9 x i8] c"Infinite\00"
@_string_constant.17 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 8, i8* getelementptr ([9 x i8]* @string_constant.17, i32 0, i32 0) }
@string_constant.18 = constant [10 x i8] c" monkeys \00"
@_string_constant.18 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 9, i8* getelementptr ([10 x i8]* @string_constant.18, i32 0, i32 0) }
@string_constant.19 = constant [2 x i8] c" \00"
@_string_constant.19 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.19, i32 0, i32 0) }
@string_constant.20 = constant [7 x i8] c"write \00"
@_string_constant.20 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 6, i8* getelementptr ([7 x i8]* @string_constant.20, i32 0, i32 0) }
@string_constant.21 = constant [8 x i8] c"Macbeth\00"
@_string_constant.21 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 7, i8* getelementptr ([8 x i8]* @string_constant.21, i32 0, i32 0) }
@string_constant.22 = constant [2 x i8] c".\00"
@_string_constant.22 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.22, i32 0, i32 0) }
@string_constant.23 = constant [2 x i8] c".\00"
@_string_constant.23 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.23, i32 0, i32 0) }
@string_constant.24 = constant [4 x i8] c"can\00"
@_string_constant.24 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 3, i8* getelementptr ([4 x i8]* @string_constant.24, i32 0, i32 0) }
@string_constant.25 = constant [22 x i8] c"are expensive to feed\00"
@_string_constant.25 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 21, i8* getelementptr ([22 x i8]* @string_constant.25, i32 0, i32 0) }
@string_constant.26 = constant [2 x i8] c"\0A\00"
@_string_constant.26 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.26, i32 0, i32 0) }
@string_constant.27 = constant [2 x i8] c"\0A\00"
@_string_constant.27 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.27, i32 0, i32 0) }
@string_constant.28 = constant [6 x i8] c" was \00"
@_string_constant.28 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 5, i8* getelementptr ([6 x i8]* @string_constant.28, i32 0, i32 0) }
@string_constant.29 = constant [2 x i8] c".\00"
@_string_constant.29 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.29, i32 0, i32 0) }
@string_constant.30 = constant [9 x i8] c"Infinite\00"
@_string_constant.30 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 8, i8* getelementptr ([9 x i8]* @string_constant.30, i32 0, i32 0) }
@string_constant.31 = constant [10 x i8] c" monkeys \00"
@_string_constant.31 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 9, i8* getelementptr ([10 x i8]* @string_constant.31, i32 0, i32 0) }
@string_constant.32 = constant [2 x i8] c" \00"
@_string_constant.32 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.32, i32 0, i32 0) }
@string_constant.33 = constant [7 x i8] c"write \00"
@_string_constant.33 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 6, i8* getelementptr ([7 x i8]* @string_constant.33, i32 0, i32 0) }
@string_constant.34 = constant [8 x i8] c"Macbeth\00"
@_string_constant.34 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 7, i8* getelementptr ([8 x i8]* @string_constant.34, i32 0, i32 0) }
@string_constant.35 = constant [2 x i8] c".\00"
@_string_constant.35 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.35, i32 0, i32 0) }
@string_constant.36 = constant [2 x i8] c".\00"
@_string_constant.36 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.36, i32 0, i32 0) }
@string_constant.37 = constant [4 x i8] c"can\00"
@_string_constant.37 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 3, i8* getelementptr ([4 x i8]* @string_constant.37, i32 0, i32 0) }
@string_constant.38 = constant [22 x i8] c"are expensive to feed\00"
@_string_constant.38 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 21, i8* getelementptr ([22 x i8]* @string_constant.38, i32 0, i32 0) }
@string_constant.39 = constant [2 x i8] c"\0A\00"
@_string_constant.39 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.39, i32 0, i32 0) }
@string_constant.40 = constant [2 x i8] c"\0A\00"
@_string_constant.40 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.40, i32 0, i32 0) }
@string_constant.41 = constant [6 x i8] c" was \00"
@_string_constant.41 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 5, i8* getelementptr ([6 x i8]* @string_constant.41, i32 0, i32 0) }
@string_constant.42 = constant [2 x i8] c".\00"
@_string_constant.42 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.42, i32 0, i32 0) }
@string_constant.43 = constant [12 x i8] c"Shakespeare\00"
@_string_constant.43 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 11, i8* getelementptr ([12 x i8]* @string_constant.43, i32 0, i32 0) }
@string_constant.44 = constant [15 x i8] c"cost-effective\00"
@_string_constant.44 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 14, i8* getelementptr ([15 x i8]* @string_constant.44, i32 0, i32 0) }
; Runtime type information and virtual tables
;
%struct.Rm = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@Rm = global %struct.Rm{ %struct.TString* @Nm, i32 10, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.Tm*)* @m_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.Tm*, %struct.TString*)* @M1_m_mm to i8*)
,	i8* bitcast (%struct.TString*(%struct.Tm*)* @M1_m_m_m to i8*)
]}
%struct.Rmm = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [5 x i8*] }
@Rmm = global %struct.Rmm{ %struct.TString* @Nmm, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[5 x i8*] [i8* bitcast (void (%struct.Tmm*)* @mm_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.Tmm*)* @M2_mm_m to i8*)
]}
%struct.Rm_m = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@Rm_m = global %struct.Rm_m{ %struct.TString* @Nm_m, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.Tm_m*)* @m_m_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.Tm_m*)* @M3_m_m_m to i8*)
,	i8* bitcast (%struct.TString*(%struct.Tm_m*, %struct.TString*, %struct.TString*)* @M3_m_m_m_ to i8*)
]}
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_print to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) form
define void @m_init(%struct.Tm* %self) {
%1 = alloca %struct.Tm*
store %struct.Tm* %self, %struct.Tm** %1
%2 = load %struct.Tm** %1
%3 = bitcast %struct.Tm* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

%4 = getelementptr %struct.Tm* %2, i32 0, i32 1
	%5 = load %struct.Tm** %1
	%6 = getelementptr %struct.Tm* %5, i32 0, i32 2
	%7 = load %struct.TString** %6
	%8 = call %struct.TString* @M6_String_concat(%struct.TString* @_string_constant.30, %struct.TString* %7)
store %struct.TString* %8, %struct.TString** %4
%9 = getelementptr %struct.Tm* %2, i32 0, i32 2
	%10 = load %struct.Tm** %1
	%11 = getelementptr %struct.Tm* %10, i32 0, i32 1
	%12 = load %struct.TString** %11
	%13 = call %struct.TString* @M6_String_concat(%struct.TString* %12, %struct.TString* @_string_constant.31)
store %struct.TString* %13, %struct.TString** %9
ret void
}
; Class initializer (constructor) formm
define void @mm_init(%struct.Tmm* %self) {
%1 = alloca %struct.Tmm*
store %struct.Tmm* %self, %struct.Tmm** %1
%2 = load %struct.Tmm** %1
%3 = bitcast %struct.Tmm* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

ret void
}
; Class initializer (constructor) form_m
define void @m_m_init(%struct.Tm_m* %self) {
%1 = alloca %struct.Tm_m*
store %struct.Tm_m* %self, %struct.Tm_m** %1
%2 = load %struct.Tm_m** %1
%3 = bitcast %struct.Tm_m* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

ret void
}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

ret void
}

define %struct.TString* @M1_m_mm (%struct.Tm* %self, %struct.TString* %s) {
	; Prologue - save parameters
	%1 = alloca %struct.Tm*
	store %struct.Tm* %self, %struct.Tm** %1

	%2 = alloca %struct.TString*
	store %struct.TString* %s, %struct.TString** %2
	%3 = alloca %struct.TString*
	%4 = load %struct.Tm** %1
	%5 = getelementptr %struct.Tm* %4, i32 0, i32 2
	%6 = load %struct.TString** %5
	%7 = load %struct.TString** %2
	%8 = call %struct.TString* @M6_String_concat(%struct.TString* %6, %struct.TString* %7)
	%9 = call %struct.TString* @M6_String_concat(%struct.TString* %8, %struct.TString* @_string_constant.32)
	store %struct.TString* %9, %struct.TString** %3
	%10 = load %struct.TString** %3
	%11 = call %struct.TString* @M6_String_concat(%struct.TString* %10, %struct.TString* @_string_constant.33)
	store %struct.TString* %11, %struct.TString** %2
	%12 = load %struct.TString** %2
	%13 = bitcast %struct.TString* %12 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %13)
	%14 = getelementptr %struct.TString* %12, i32 0, i32 0   ; Locate address of RTTI pointer
	%15 = load %struct.__lcpl_rtti** %14         ; Load RTTI pointer
	%16 = getelementptr %struct.__lcpl_rtti* %15, i32 0, i32 3, i32 4
	%17 = load i8** %16
	%18 = bitcast i8* %17 to i32 (%struct.TString*)*  ; Convert char * into function pointer
	%19 = call i32 %18(%struct.TString* %12)

	%20 = icmp eq i32 27, %19
	%21 = zext i1 %20 to i32
	%22 = icmp ne i32 %21, 0
	br i1 %22, label %L0, label %L1
L0:
	%23 = alloca %struct.TString*
	%24 = load %struct.TString** %2
	%25 = call %struct.TString* @M6_String_concat(%struct.TString* %24, %struct.TString* @_string_constant.34)
	store %struct.TString* %25, %struct.TString** %23
	%26 = load %struct.TString** %23
	%27 = call %struct.TString* @M6_String_concat(%struct.TString* %26, %struct.TString* @_string_constant.42)
	store %struct.TString* %27, %struct.TString** %2
L1:
	%28 = load %struct.TString** %3
	%29 = call %struct.TString* @M6_String_concat(%struct.TString* %28, %struct.TString* @_string_constant.42)
	store %struct.TString* %29, %struct.TString** %2
	%30 = phi i32 [ %27, %L2 ], [ %29, %L2 ]
	ret %struct.TString* %30
}
define %struct.TString* @M1_m_m_m (%struct.Tm* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.Tm*
	store %struct.Tm* %self, %struct.Tm** %1

	%2 = load %struct.Tm** %1
	%3 = bitcast %struct.Tm* %2 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.Tm* %2, i32 0, i32 0   ; Locate address of RTTI pointer
	%5 = load %struct.__lcpl_rtti** %4         ; Load RTTI pointer
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3, i32 4
	%7 = load i8** %6
	%8 = bitcast i8* %7 to %struct.TString* (%struct.Tm*, %struct.TString*)*  ; Convert char * into function pointer
	%9 = call %struct.TString* %8(%struct.Tm* %2, %struct.TString* @_string_constant.37)

	ret %struct.TString* %9
}
define %struct.TString* @M2_mm_m (%struct.Tmm* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.Tmm*
	store %struct.Tmm* %self, %struct.Tmm** %1

	%2 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.Rm* @Rm to %struct.__lcpl_rtti*))
	%3 = bitcast i8* %2 to %struct.Tm*
	%4 = bitcast %struct.Tm* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.Tm* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 4
	%8 = load i8** %7
	%9 = bitcast i8* %8 to %struct.TString* (%struct.Tm*, %struct.TString*)*  ; Convert char * into function pointer
	%10 = call %struct.TString* %9(%struct.Tm* %3, %struct.TString* @_string_constant.38)

	ret %struct.TString* %10
}
define %struct.TString* @M3_m_m_m (%struct.Tm_m* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.Tm_m*
	store %struct.Tm_m* %self, %struct.Tm_m** %1

	%2 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.Rm* @Rm to %struct.__lcpl_rtti*))
	%3 = bitcast i8* %2 to %struct.Tm*
	%4 = bitcast %struct.Tm* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.Tm* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 5
	%8 = load i8** %7
	%9 = bitcast i8* %8 to %struct.TString* (%struct.Tm*)*  ; Convert char * into function pointer
	%10 = call %struct.TString* %9(%struct.Tm* %3)

	%11 = call %struct.TString* @M6_String_concat(%struct.TString* %10, %struct.TString* @_string_constant.40)
	%12 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.Rmm* @Rmm to %struct.__lcpl_rtti*))
	%13 = bitcast i8* %12 to %struct.Tmm*
	%14 = bitcast %struct.Tmm* %13 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %14)
	%15 = getelementptr %struct.Tmm* %13, i32 0, i32 0   ; Locate address of RTTI pointer
	%16 = load %struct.__lcpl_rtti** %15         ; Load RTTI pointer
	%17 = getelementptr %struct.__lcpl_rtti* %16, i32 0, i32 3, i32 4
	%18 = load i8** %17
	%19 = bitcast i8* %18 to %struct.TString* (%struct.Tmm*)*  ; Convert char * into function pointer
	%20 = call %struct.TString* %19(%struct.Tmm* %13)

	%21 = call %struct.TString* @M6_String_concat(%struct.TString* %11, %struct.TString* %20)
	%22 = call %struct.TString* @M6_String_concat(%struct.TString* %21, %struct.TString* @_string_constant.40)
	ret %struct.TString* %22
}
define %struct.TString* @M3_m_m_m_ (%struct.Tm_m* %self, %struct.TString* %who, %struct.TString* %what) {
	; Prologue - save parameters
	%1 = alloca %struct.Tm_m*
	store %struct.Tm_m* %self, %struct.Tm_m** %1

	%2 = alloca %struct.TString*
	store %struct.TString* %who, %struct.TString** %2
	%3 = alloca %struct.TString*
	store %struct.TString* %what, %struct.TString** %3
	%4 = load %struct.TString** %2
	%5 = call %struct.TString* @M6_String_concat(%struct.TString* %4, %struct.TString* @_string_constant.41)
	%6 = load %struct.TString** %3
	%7 = call %struct.TString* @M6_String_concat(%struct.TString* %5, %struct.TString* %6)
	%8 = call %struct.TString* @M6_String_concat(%struct.TString* %7, %struct.TString* @_string_constant.42)
	ret %struct.TString* %8
}
define void @M4_Main_print (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RIO* @RIO to %struct.__lcpl_rtti*))
	%3 = bitcast i8* %2 to %struct.TIO*
	%4 = bitcast %struct.TIO* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.TIO* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 5
	%8 = load i8** %7
	%9 = bitcast i8* %8 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%10 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.Rm_m* @Rm_m to %struct.__lcpl_rtti*))
	%11 = bitcast i8* %10 to %struct.Tm_m*
	%12 = bitcast %struct.Tm_m* %11 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %12)
	%13 = getelementptr %struct.Tm_m* %11, i32 0, i32 0   ; Locate address of RTTI pointer
	%14 = load %struct.__lcpl_rtti** %13         ; Load RTTI pointer
	%15 = getelementptr %struct.__lcpl_rtti* %14, i32 0, i32 3, i32 -1
	%16 = load i8** %15
	%17 = bitcast i8* %16 to %struct.TString* (%struct.Tm_m*)*  ; Convert char * into function pointer
	%18 = call %struct.TString* %17(%struct.Tm_m* %11)

	%19 = call %struct.TIO* %9(%struct.TIO* %3, %struct.TString* %18)

	%20 = bitcast %struct.TIO* %19 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %20)
	%21 = getelementptr %struct.TIO* %19, i32 0, i32 0   ; Locate address of RTTI pointer
	%22 = load %struct.__lcpl_rtti** %21         ; Load RTTI pointer
	%23 = getelementptr %struct.__lcpl_rtti* %22, i32 0, i32 3, i32 5
	%24 = load i8** %23
	%25 = bitcast i8* %24 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%26 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.Rm_m* @Rm_m to %struct.__lcpl_rtti*))
	%27 = bitcast i8* %26 to %struct.Tm_m*
	%28 = bitcast %struct.Tm_m* %27 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %28)
	%29 = getelementptr %struct.Tm_m* %27, i32 0, i32 0   ; Locate address of RTTI pointer
	%30 = load %struct.__lcpl_rtti** %29         ; Load RTTI pointer
	%31 = getelementptr %struct.__lcpl_rtti* %30, i32 0, i32 3, i32 -1
	%32 = load i8** %31
	%33 = bitcast i8* %32 to %struct.TString* (%struct.Tm_m*, %struct.TString*, %struct.TString*)*  ; Convert char * into function pointer
	%34 = call %struct.TString* %33(%struct.Tm_m* %27, %struct.TString* @_string_constant.43, %struct.TString* @_string_constant.44)

	%35 = call %struct.TIO* %25(%struct.TIO* %19, %struct.TString* %34)

	ret void
}
define void @M4_Main_main (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = load %struct.TMain** %1
	%3 = bitcast %struct.TMain* %2 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0   ; Locate address of RTTI pointer
	%5 = load %struct.__lcpl_rtti** %4         ; Load RTTI pointer
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3, i32 4
	%7 = load i8** %6
	%8 = bitcast i8* %7 to void (%struct.TMain*)*  ; Convert char * into function pointer
	call void %8(%struct.TMain* %2)

	ret void
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 5
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
