;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TMain = type { %struct.__lcpl_rtti* , i32, i32, %struct.TString*}
; Name of classes
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

@string_constant.0 = constant [17 x i8] c"This is a string\00"
@_string_constant.0 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 16, i8* getelementptr ([17 x i8]* @string_constant.0, i32 0, i32 0) }
@string_constant.1 = constant [4 x i8] c" > \00"
@_string_constant.1 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 3, i8* getelementptr ([4 x i8]* @string_constant.1, i32 0, i32 0) }
@string_constant.2 = constant [5 x i8] c" >> \00"
@_string_constant.2 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @string_constant.2, i32 0, i32 0) }
; Runtime type information and virtual tables
;
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 13, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TIO*
call void @IO_init(%struct.TIO* %3)

%4 = getelementptr %struct.TMain* %2, i32 0, i32 1
store i32 0, i32* %4
%5 = getelementptr %struct.TMain* %2, i32 0, i32 2
store i32 1234, i32* %5
%6 = getelementptr %struct.TMain* %2, i32 0, i32 3
store %struct.TString* @_string_constant.0, %struct.TString** %6
ret void
}

define void @M4_Main_main (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = alloca %struct.TString*
	store %struct.TString* @_string_constant.1, %struct.TString** %2
	%3 = load %struct.TMain** %1
	%4 = bitcast %struct.TMain* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.TMain* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 5
	%8 = load i8** %7
	%9 = bitcast i8* %8 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%10 = bitcast %struct.TMain* %3 to %struct.TIO*
	%11 = load %struct.TString** %2
	%12 = call %struct.TIO* %9(%struct.TIO* %10, %struct.TString* %11)

	%13 = bitcast %struct.TIO* %12 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %13)
	%14 = getelementptr %struct.TIO* %12, i32 0, i32 0   ; Locate address of RTTI pointer
	%15 = load %struct.__lcpl_rtti** %14         ; Load RTTI pointer
	%16 = getelementptr %struct.__lcpl_rtti* %15, i32 0, i32 3, i32 5
	%17 = load i8** %16
	%18 = bitcast i8* %17 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%19 = load %struct.TMain** %1
	%20 = getelementptr %struct.TMain* %19, i32 0, i32 3
	%21 = load %struct.TString** %20
	%22 = call %struct.TIO* %18(%struct.TIO* %12, %struct.TString* %21)

	%23 = alloca %struct.TString*
	store %struct.TString* @_string_constant.2, %struct.TString** %23
	%24 = load %struct.TMain** %1
	%25 = bitcast %struct.TMain* %24 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %25)
	%26 = getelementptr %struct.TMain* %24, i32 0, i32 0   ; Locate address of RTTI pointer
	%27 = load %struct.__lcpl_rtti** %26         ; Load RTTI pointer
	%28 = getelementptr %struct.__lcpl_rtti* %27, i32 0, i32 3, i32 5
	%29 = load i8** %28
	%30 = bitcast i8* %29 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%31 = bitcast %struct.TMain* %24 to %struct.TIO*
	%32 = load %struct.TString** %23
	%33 = call %struct.TIO* %30(%struct.TIO* %31, %struct.TString* %32)

	%34 = bitcast %struct.TIO* %33 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %34)
	%35 = getelementptr %struct.TIO* %33, i32 0, i32 0   ; Locate address of RTTI pointer
	%36 = load %struct.__lcpl_rtti** %35         ; Load RTTI pointer
	%37 = getelementptr %struct.__lcpl_rtti* %36, i32 0, i32 3, i32 5
	%38 = load i8** %37
	%39 = bitcast i8* %38 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%40 = load %struct.TMain** %1
	%41 = getelementptr %struct.TMain* %40, i32 0, i32 1
	%42 = load i32* %41
	%43 = call %struct.TString* @__lcpl_intToString(i32 %42)
	%44 = call %struct.TIO* %39(%struct.TIO* %33, %struct.TString* %43)

	%45 = bitcast %struct.TIO* %44 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %45)
	%46 = getelementptr %struct.TIO* %44, i32 0, i32 0   ; Locate address of RTTI pointer
	%47 = load %struct.__lcpl_rtti** %46         ; Load RTTI pointer
	%48 = getelementptr %struct.__lcpl_rtti* %47, i32 0, i32 3, i32 5
	%49 = load i8** %48
	%50 = bitcast i8* %49 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%51 = load %struct.TMain** %1
	%52 = getelementptr %struct.TMain* %51, i32 0, i32 1
	%53 = load i32* %52
	%54 = load %struct.TMain** %1
	%55 = getelementptr %struct.TMain* %54, i32 0, i32 2
	%56 = load i32* %55
	%57 = add i32 %53, %56
	%58 = call %struct.TString* @__lcpl_intToString(i32 %57)
	%59 = call %struct.TIO* %50(%struct.TIO* %44, %struct.TString* %58)

	ret void
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 6
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
