!!ro.pub.cs.lcpl.Program
classes:
- features:
  - !!ro.pub.cs.lcpl.Attribute
    init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 5, type: null, value: 100}
    lineNumber: 5
    name: max_val
    type: Int
  - !!ro.pub.cs.lcpl.Attribute
    init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 6, type: null, value: 0}
    lineNumber: 6
    name: even_count
    type: Int
  - !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.LocalDefinition
        init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 10, type: null, value: 0}
        lineNumber: 10
        name: i
        scope: !!ro.pub.cs.lcpl.Block
          expressions:
          - !!ro.pub.cs.lcpl.WhileStatement
            condition: !!ro.pub.cs.lcpl.LessThan
              e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 11, name: i, type: null}
              e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 11, name: max_val, type: null}
              lineNumber: 11
              type: null
            lineNumber: 11
            loopBody: !!ro.pub.cs.lcpl.Block
              expressions:
              - !!ro.pub.cs.lcpl.IfStatement
                condition: !!ro.pub.cs.lcpl.EqualComparison
                  e1: !!ro.pub.cs.lcpl.Subtraction
                    e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 12, name: i, type: null}
                    e2: !!ro.pub.cs.lcpl.Multiplication
                      e1: !!ro.pub.cs.lcpl.Division
                        e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 12, name: i, type: null}
                        e2: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 12, type: null,
                          value: 2}
                        lineNumber: 12
                        type: null
                      e2: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 12, type: null,
                        value: 2}
                      lineNumber: 12
                      type: null
                    lineNumber: 12
                    type: null
                  e2: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 12, type: null, value: 0}
                  lineNumber: 12
                  type: null
                ifExpr: !!ro.pub.cs.lcpl.Block
                  expressions:
                  - !!ro.pub.cs.lcpl.Assignment
                    e1: !!ro.pub.cs.lcpl.Addition
                      e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 13, name: even_count,
                        type: null}
                      e2: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 13, type: null,
                        value: 1}
                      lineNumber: 13
                      type: null
                    lineNumber: 13
                    symbol: even_count
                    type: null
                  lineNumber: 13
                  type: null
                lineNumber: 12
                thenExpr: null
                type: null
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Addition
                  e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 15, name: i, type: null}
                  e2: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 15, type: null, value: 1}
                  lineNumber: 15
                  type: null
                lineNumber: 15
                symbol: i
                type: null
              lineNumber: 12
              type: null
            type: null
          - !!ro.pub.cs.lcpl.Dispatch
            arguments:
            - !!ro.pub.cs.lcpl.Symbol {lineNumber: 17, name: even_count, type: null}
            lineNumber: 17
            name: out
            object: !!ro.pub.cs.lcpl.Cast
              e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 17, name: self, type: null}
              lineNumber: 17
              type: IO
            type: null
          lineNumber: 11
          type: null
        type: Int
      lineNumber: 10
      type: null
    lineNumber: 9
    name: main
    parameters: []
    returnType: void
  lineNumber: 3
  name: Main
  parent: IO
lineNumber: 3

