;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TMain = type { %struct.__lcpl_rtti* }
; Name of classes
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

@string_constant.0 = constant [2 x i8] c"\0A\00"
@_string_constant.0 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.0, i32 0, i32 0) }
; Runtime type information and virtual tables
;
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [8 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[8 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (void(%struct.TMain*, %struct.TString*)* @M4_Main_o to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TIO*
call void @IO_init(%struct.TIO* %3)

ret void
}

define void @M4_Main_o (%struct.TMain* %self, %struct.TString* %s) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = alloca %struct.TString*
	store %struct.TString* %s, %struct.TString** %2
	%3 = load %struct.TMain** %1
	%4 = bitcast %struct.TMain* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.TMain* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 5
	%8 = load i8** %7
	%9 = bitcast i8* %8 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%10 = bitcast %struct.TMain* %3 to %struct.TIO*
	%11 = load %struct.TString** %2
	%12 = call %struct.TString* @M6_String_concat(%struct.TString* %11, %struct.TString* @_string_constant.0)
	%13 = call %struct.TIO* %9(%struct.TIO* %10, %struct.TString* %12)

	ret void
}
define void @M4_Main_main (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = load %struct.TMain** %1
	%3 = bitcast %struct.TMain* %2 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0   ; Locate address of RTTI pointer
	%5 = load %struct.__lcpl_rtti** %4         ; Load RTTI pointer
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3, i32 6
	%7 = load i8** %6
	%8 = bitcast i8* %7 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
	%9 = add i32 1, 2
	%10 = call %struct.TString* @__lcpl_intToString(i32 %9)
	call void %8(%struct.TMain* %2, %struct.TString* %10)

	%11 = load %struct.TMain** %1
	%12 = bitcast %struct.TMain* %11 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %12)
	%13 = getelementptr %struct.TMain* %11, i32 0, i32 0   ; Locate address of RTTI pointer
	%14 = load %struct.__lcpl_rtti** %13         ; Load RTTI pointer
	%15 = getelementptr %struct.__lcpl_rtti* %14, i32 0, i32 3, i32 6
	%16 = load i8** %15
	%17 = bitcast i8* %16 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
	%18 = sub i32 123, 1000
	%19 = call %struct.TString* @__lcpl_intToString(i32 %18)
	call void %17(%struct.TMain* %11, %struct.TString* %19)

	%20 = load %struct.TMain** %1
	%21 = bitcast %struct.TMain* %20 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %21)
	%22 = getelementptr %struct.TMain* %20, i32 0, i32 0   ; Locate address of RTTI pointer
	%23 = load %struct.__lcpl_rtti** %22         ; Load RTTI pointer
	%24 = getelementptr %struct.__lcpl_rtti* %23, i32 0, i32 3, i32 6
	%25 = load i8** %24
	%26 = bitcast i8* %25 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
%27 = udiv i32 3, 4
	%28 = call %struct.TString* @__lcpl_intToString(i32 %27)
	call void %26(%struct.TMain* %20, %struct.TString* %28)

	%29 = load %struct.TMain** %1
	%30 = bitcast %struct.TMain* %29 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %30)
	%31 = getelementptr %struct.TMain* %29, i32 0, i32 0   ; Locate address of RTTI pointer
	%32 = load %struct.__lcpl_rtti** %31         ; Load RTTI pointer
	%33 = getelementptr %struct.__lcpl_rtti* %32, i32 0, i32 3, i32 6
	%34 = load i8** %33
	%35 = bitcast i8* %34 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
	%36 = mul i32 10, 20
	%37 = call %struct.TString* @__lcpl_intToString(i32 %36)
	call void %35(%struct.TMain* %29, %struct.TString* %37)

	%38 = load %struct.TMain** %1
	%39 = bitcast %struct.TMain* %38 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %39)
	%40 = getelementptr %struct.TMain* %38, i32 0, i32 0   ; Locate address of RTTI pointer
	%41 = load %struct.__lcpl_rtti** %40         ; Load RTTI pointer
	%42 = getelementptr %struct.__lcpl_rtti* %41, i32 0, i32 3, i32 6
	%43 = load i8** %42
	%44 = bitcast i8* %43 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
	%45 = sub i32 0, 100
	%46 = call %struct.TString* @__lcpl_intToString(i32 %45)
	call void %44(%struct.TMain* %38, %struct.TString* %46)

	%47 = load %struct.TMain** %1
	%48 = bitcast %struct.TMain* %47 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %48)
	%49 = getelementptr %struct.TMain* %47, i32 0, i32 0   ; Locate address of RTTI pointer
	%50 = load %struct.__lcpl_rtti** %49         ; Load RTTI pointer
	%51 = getelementptr %struct.__lcpl_rtti* %50, i32 0, i32 3, i32 6
	%52 = load i8** %51
	%53 = bitcast i8* %52 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
%54 = icmp ult i32 5, 3
%55 = zext i1 %54 to i32	%56 = call %struct.TString* @__lcpl_intToString(i32 %55)
	call void %53(%struct.TMain* %47, %struct.TString* %56)

	%57 = load %struct.TMain** %1
	%58 = bitcast %struct.TMain* %57 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %58)
	%59 = getelementptr %struct.TMain* %57, i32 0, i32 0   ; Locate address of RTTI pointer
	%60 = load %struct.__lcpl_rtti** %59         ; Load RTTI pointer
	%61 = getelementptr %struct.__lcpl_rtti* %60, i32 0, i32 3, i32 6
	%62 = load i8** %61
	%63 = bitcast i8* %62 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
%64 = icmp ule i32 4, 7
%65 = zext i1 %64 to i32	%66 = call %struct.TString* @__lcpl_intToString(i32 %65)
	call void %63(%struct.TMain* %57, %struct.TString* %66)

	%67 = load %struct.TMain** %1
	%68 = bitcast %struct.TMain* %67 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %68)
	%69 = getelementptr %struct.TMain* %67, i32 0, i32 0   ; Locate address of RTTI pointer
	%70 = load %struct.__lcpl_rtti** %69         ; Load RTTI pointer
	%71 = getelementptr %struct.__lcpl_rtti* %70, i32 0, i32 3, i32 6
	%72 = load i8** %71
	%73 = bitcast i8* %72 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
	%74 = icmp eq i32 100, 100
	%75 = zext i1 %74 to i32
	%76 = call %struct.TString* @__lcpl_intToString(i32 %75)
	call void %73(%struct.TMain* %67, %struct.TString* %76)

	%77 = load %struct.TMain** %1
	%78 = bitcast %struct.TMain* %77 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %78)
	%79 = getelementptr %struct.TMain* %77, i32 0, i32 0   ; Locate address of RTTI pointer
	%80 = load %struct.__lcpl_rtti** %79         ; Load RTTI pointer
	%81 = getelementptr %struct.__lcpl_rtti* %80, i32 0, i32 3, i32 6
	%82 = load i8** %81
	%83 = bitcast i8* %82 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
	%84 = icmp ne i32 10, 0
	%85 = xor i1 %84, true 
	%86 = zext i1 %85 to i32
	%87 = call %struct.TString* @__lcpl_intToString(i32 %86)
	call void %83(%struct.TMain* %77, %struct.TString* %87)

	%88 = load %struct.TMain** %1
	%89 = bitcast %struct.TMain* %88 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %89)
	%90 = getelementptr %struct.TMain* %88, i32 0, i32 0   ; Locate address of RTTI pointer
	%91 = load %struct.__lcpl_rtti** %90         ; Load RTTI pointer
	%92 = getelementptr %struct.__lcpl_rtti* %91, i32 0, i32 3, i32 6
	%93 = load i8** %92
	%94 = bitcast i8* %93 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
	%95 = icmp eq i8* null, null
	%96 = zext i1 %95 to i32
	%97 = call %struct.TString* @__lcpl_intToString(i32 %96)
	call void %94(%struct.TMain* %88, %struct.TString* %97)

	%98 = load %struct.TMain** %1
	%99 = bitcast %struct.TMain* %98 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %99)
	%100 = getelementptr %struct.TMain* %98, i32 0, i32 0   ; Locate address of RTTI pointer
	%101 = load %struct.__lcpl_rtti** %100         ; Load RTTI pointer
	%102 = getelementptr %struct.__lcpl_rtti* %101, i32 0, i32 3, i32 6
	%103 = load i8** %102
	%104 = bitcast i8* %103 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
	%105 = load %struct.TMain** %1
	%106 = bitcast %struct.TMain* %105 to i8*
	%107 = call i8* @__lcpl_cast(i8* %106, %struct.__lcpl_rtti* bitcast (%struct.RObject* @RObject to %struct.__lcpl_rtti*))
	%108 = bitcast i8* %107 to %struct.TObject*
	%109 = bitcast %struct.TObject* %108 to i8*
	%110 = icmp eq i8* null, %109
	%111 = zext i1 %110 to i32
	%112 = call %struct.TString* @__lcpl_intToString(i32 %111)
	call void %104(%struct.TMain* %98, %struct.TString* %112)

	%113 = load %struct.TMain** %1
	%114 = bitcast %struct.TMain* %113 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %114)
	%115 = getelementptr %struct.TMain* %113, i32 0, i32 0   ; Locate address of RTTI pointer
	%116 = load %struct.__lcpl_rtti** %115         ; Load RTTI pointer
	%117 = getelementptr %struct.__lcpl_rtti* %116, i32 0, i32 3, i32 6
	%118 = load i8** %117
	%119 = bitcast i8* %118 to void (%struct.TMain*, %struct.TString*)*  ; Convert char * into function pointer
	%120 = call %struct.TString* @__lcpl_intToString(i32 0)
	call void %119(%struct.TMain* %113, %struct.TString* %120)

	ret void
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 7
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
