;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TCensoredString = type { %struct.__lcpl_rtti* , %struct.TString*, %struct.TString*, %struct.TString*}
%struct.TMain = type { %struct.__lcpl_rtti* }
; Name of classes
@class_name.CensoredString = internal constant [15 x i8] c"CensoredString\00"
@NCensoredString = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 14, i8* getelementptr ([15 x i8]* @class_name.CensoredString, i32 0, i32 0) }
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

@string_constant.0 = constant [1 x i8] c"\00"
@_string_constant.0 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.0, i32 0, i32 0) }
@string_constant.1 = constant [4 x i8] c"***\00"
@_string_constant.1 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 3, i8* getelementptr ([4 x i8]* @string_constant.1, i32 0, i32 0) }
@string_constant.2 = constant [1 x i8] c"\00"
@_string_constant.2 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.2, i32 0, i32 0) }
@string_constant.3 = constant [4 x i8] c"***\00"
@_string_constant.3 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 3, i8* getelementptr ([4 x i8]* @string_constant.3, i32 0, i32 0) }
@string_constant.4 = constant [42 x i8] c"Fight for freedom! And freedom will win!\0A\00"
@_string_constant.4 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 41, i8* getelementptr ([42 x i8]* @string_constant.4, i32 0, i32 0) }
@string_constant.5 = constant [8 x i8] c"freedom\00"
@_string_constant.5 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 7, i8* getelementptr ([8 x i8]* @string_constant.5, i32 0, i32 0) }
; Runtime type information and virtual tables
;
%struct.RCensoredString = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RCensoredString = global %struct.RCensoredString{ %struct.TString* @NCensoredString, i32 13, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TCensoredString*)* @CensoredString_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TCensoredString*, %struct.TString*)* @M14_CensoredString_forbid to i8*)
,	i8* bitcast (void(%struct.TCensoredString*, %struct.TString*)* @M14_CensoredString_set to i8*)
,	i8* bitcast (%struct.TString*(%struct.TCensoredString*)* @M14_CensoredString_get to i8*)
]}
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) forCensoredString
define void @CensoredString_init(%struct.TCensoredString* %self) {
%1 = alloca %struct.TCensoredString*
store %struct.TCensoredString* %self, %struct.TCensoredString** %1
%2 = load %struct.TCensoredString** %1
%3 = bitcast %struct.TCensoredString* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

%4 = getelementptr %struct.TCensoredString* %2, i32 0, i32 1
store %struct.TString* @_string_constant.strEmpty, %struct.TString** %4
%5 = getelementptr %struct.TCensoredString* %2, i32 0, i32 2
store %struct.TString* @_string_constant.strEmpty, %struct.TString** %5
%6 = getelementptr %struct.TCensoredString* %2, i32 0, i32 3
store %struct.TString* @_string_constant.3, %struct.TString** %6
ret void
}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TIO*
call void @IO_init(%struct.TIO* %3)

ret void
}

define void @M14_CensoredString_forbid (%struct.TCensoredString* %self, %struct.TString* %s) {
	; Prologue - save parameters
	%1 = alloca %struct.TCensoredString*
	store %struct.TCensoredString* %self, %struct.TCensoredString** %1

	%2 = alloca %struct.TString*
	store %struct.TString* %s, %struct.TString** %2
	%3 = load %struct.TString** %2
	%4 = load %struct.TCensoredString** %1
	%5 = getelementptr %struct.TCensoredString* %4, i32 0, i32 2
	store %struct.TString* %3, %struct.TString** %5
	ret void
}
define void @M14_CensoredString_set (%struct.TCensoredString* %self, %struct.TString* %s) {
	; Prologue - save parameters
	%1 = alloca %struct.TCensoredString*
	store %struct.TCensoredString* %self, %struct.TCensoredString** %1

	%2 = alloca %struct.TString*
	store %struct.TString* %s, %struct.TString** %2
	%3 = load %struct.TString** %2
	%4 = load %struct.TCensoredString** %1
	%5 = getelementptr %struct.TCensoredString* %4, i32 0, i32 1
	store %struct.TString* %3, %struct.TString** %5
	ret void
}
define %struct.TString* @M14_CensoredString_get (%struct.TCensoredString* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TCensoredString*
	store %struct.TCensoredString* %self, %struct.TCensoredString** %1

	%2 = alloca %struct.TString*
	%3 = load %struct.TCensoredString** %1
	%4 = getelementptr %struct.TCensoredString* %3, i32 0, i32 1
	%5 = load %struct.TString** %4
	store %struct.TString* %5, %struct.TString** %2
	%6 = load %struct.TCensoredString** %1
	%7 = getelementptr %struct.TCensoredString* %6, i32 0, i32 2
	%8 = load %struct.TString** %7
	%9 = bitcast %struct.TString* %8 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %9)
	%10 = getelementptr %struct.TString* %8, i32 0, i32 0   ; Locate address of RTTI pointer
	%11 = load %struct.__lcpl_rtti** %10         ; Load RTTI pointer
	%12 = getelementptr %struct.__lcpl_rtti* %11, i32 0, i32 3, i32 4
	%13 = load i8** %12
	%14 = bitcast i8* %13 to i32 (%struct.TString*)*  ; Convert char * into function pointer
	%15 = call i32 %14(%struct.TString* %8)

	%16 = icmp eq i32 %15, 0
	%17 = zext i1 %16 to i32
	%18 = icmp ne i32 %17, 0
	br i1 %18, label %L0, label %L1
L0:
	%19 = load %struct.TCensoredString** %1
	%20 = getelementptr %struct.TCensoredString* %19, i32 0, i32 1
	%21 = load %struct.TString** %20
L1:
