;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TVertex = type { %struct.__lcpl_rtti* , i32, i32, %struct.TVertex*}
%struct.TShape = type { %struct.__lcpl_rtti* }
%struct.TTriangle = type { %struct.__lcpl_rtti* }
%struct.TLine = type { %struct.__lcpl_rtti* }
%struct.TPoly = type { %struct.__lcpl_rtti* , %struct.TShape*, %struct.TVertex*}
%struct.TPoly3 = type { %struct.__lcpl_rtti* , %struct.TShape*, %struct.TVertex*}
%struct.TPoly1 = type { %struct.__lcpl_rtti* , %struct.TShape*, %struct.TVertex*}
%struct.TMain = type { %struct.__lcpl_rtti* , %struct.TPoly*, %struct.TPoly*}
; Name of classes
@class_name.Vertex = internal constant [7 x i8] c"Vertex\00"
@NVertex = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 6, i8* getelementptr ([7 x i8]* @class_name.Vertex, i32 0, i32 0) }
@class_name.Shape = internal constant [6 x i8] c"Shape\00"
@NShape = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 5, i8* getelementptr ([6 x i8]* @class_name.Shape, i32 0, i32 0) }
@class_name.Triangle = internal constant [9 x i8] c"Triangle\00"
@NTriangle = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 8, i8* getelementptr ([9 x i8]* @class_name.Triangle, i32 0, i32 0) }
@class_name.Line = internal constant [5 x i8] c"Line\00"
@NLine = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Line, i32 0, i32 0) }
@class_name.Poly = internal constant [5 x i8] c"Poly\00"
@NPoly = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Poly, i32 0, i32 0) }
@class_name.Poly3 = internal constant [6 x i8] c"Poly3\00"
@NPoly3 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 5, i8* getelementptr ([6 x i8]* @class_name.Poly3, i32 0, i32 0) }
@class_name.Poly1 = internal constant [6 x i8] c"Poly1\00"
@NPoly1 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 5, i8* getelementptr ([6 x i8]* @class_name.Poly1, i32 0, i32 0) }
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

@string_constant.0 = constant [2 x i8] c"(\00"
@_string_constant.0 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.0, i32 0, i32 0) }
@string_constant.1 = constant [2 x i8] c",\00"
@_string_constant.1 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.1, i32 0, i32 0) }
@string_constant.2 = constant [2 x i8] c")\00"
@_string_constant.2 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.2, i32 0, i32 0) }
@string_constant.3 = constant [2 x i8] c"-\00"
@_string_constant.3 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.3, i32 0, i32 0) }
@string_constant.4 = constant [2 x i8] c"(\00"
@_string_constant.4 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.4, i32 0, i32 0) }
@string_constant.5 = constant [2 x i8] c",\00"
@_string_constant.5 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.5, i32 0, i32 0) }
@string_constant.6 = constant [2 x i8] c")\00"
@_string_constant.6 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.6, i32 0, i32 0) }
@string_constant.7 = constant [2 x i8] c"-\00"
@_string_constant.7 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.7, i32 0, i32 0) }
@string_constant.8 = constant [2 x i8] c"(\00"
@_string_constant.8 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.8, i32 0, i32 0) }
@string_constant.9 = constant [2 x i8] c",\00"
@_string_constant.9 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.9, i32 0, i32 0) }
@string_constant.10 = constant [2 x i8] c")\00"
@_string_constant.10 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.10, i32 0, i32 0) }
@string_constant.11 = constant [2 x i8] c"-\00"
@_string_constant.11 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.11, i32 0, i32 0) }
@string_constant.12 = constant [2 x i8] c"(\00"
@_string_constant.12 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.12, i32 0, i32 0) }
@string_constant.13 = constant [2 x i8] c",\00"
@_string_constant.13 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.13, i32 0, i32 0) }
@string_constant.14 = constant [2 x i8] c")\00"
@_string_constant.14 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.14, i32 0, i32 0) }
@string_constant.15 = constant [2 x i8] c"-\00"
@_string_constant.15 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.15, i32 0, i32 0) }
@string_constant.16 = constant [2 x i8] c"(\00"
@_string_constant.16 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.16, i32 0, i32 0) }
@string_constant.17 = constant [2 x i8] c",\00"
@_string_constant.17 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.17, i32 0, i32 0) }
@string_constant.18 = constant [2 x i8] c")\00"
@_string_constant.18 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.18, i32 0, i32 0) }
@string_constant.19 = constant [2 x i8] c"-\00"
@_string_constant.19 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.19, i32 0, i32 0) }
@string_constant.20 = constant [2 x i8] c"\0A\00"
@_string_constant.20 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.20, i32 0, i32 0) }
@string_constant.21 = constant [2 x i8] c"(\00"
@_string_constant.21 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.21, i32 0, i32 0) }
@string_constant.22 = constant [2 x i8] c",\00"
@_string_constant.22 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.22, i32 0, i32 0) }
@string_constant.23 = constant [2 x i8] c")\00"
@_string_constant.23 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.23, i32 0, i32 0) }
@string_constant.24 = constant [2 x i8] c"-\00"
@_string_constant.24 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.24, i32 0, i32 0) }
@string_constant.25 = constant [2 x i8] c"\0A\00"
@_string_constant.25 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.25, i32 0, i32 0) }
@string_constant.26 = constant [2 x i8] c"(\00"
@_string_constant.26 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.26, i32 0, i32 0) }
@string_constant.27 = constant [2 x i8] c",\00"
@_string_constant.27 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.27, i32 0, i32 0) }
@string_constant.28 = constant [2 x i8] c")\00"
@_string_constant.28 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.28, i32 0, i32 0) }
@string_constant.29 = constant [2 x i8] c"-\00"
@_string_constant.29 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.29, i32 0, i32 0) }
@string_constant.30 = constant [2 x i8] c"\0A\00"
@_string_constant.30 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.30, i32 0, i32 0) }
@string_constant.31 = constant [2 x i8] c"(\00"
@_string_constant.31 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.31, i32 0, i32 0) }
@string_constant.32 = constant [2 x i8] c",\00"
@_string_constant.32 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.32, i32 0, i32 0) }
@string_constant.33 = constant [2 x i8] c")\00"
@_string_constant.33 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.33, i32 0, i32 0) }
@string_constant.34 = constant [2 x i8] c"-\00"
@_string_constant.34 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.34, i32 0, i32 0) }
@string_constant.35 = constant [2 x i8] c"\0A\00"
@_string_constant.35 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.35, i32 0, i32 0) }
; Runtime type information and virtual tables
;
%struct.RVertex = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RVertex = global %struct.RVertex{ %struct.TString* @NVertex, i32 13, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TVertex*)* @Vertex_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TVertex*, %struct.TIO*)* @M6_Vertex_print to i8*)
,	i8* bitcast (void(%struct.TVertex*, i32, i32, %struct.TVertex*)* @M6_Vertex_init to i8*)
,	i8* bitcast (void(%struct.TVertex*, %struct.TIO*)* @M6_Vertex_print_all to i8*)
]}
%struct.RShape = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [5 x i8*] }
@RShape = global %struct.RShape{ %struct.TString* @NShape, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[5 x i8*] [i8* bitcast (void (%struct.TShape*)* @Shape_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (i32(%struct.TShape*)* @M5_Shape_sides to i8*)
]}
%struct.RTriangle = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@RTriangle = global %struct.RTriangle{ %struct.TString* @NTriangle, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RShape* @RShape to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.TTriangle*)* @Triangle_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (i32(%struct.TShape*)* @M5_Shape_sides to i8*)
,	i8* bitcast (i32(%struct.TTriangle*)* @M8_Triangle_sides to i8*)
]}
%struct.RLine = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@RLine = global %struct.RLine{ %struct.TString* @NLine, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RShape* @RShape to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.TLine*)* @Line_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (i32(%struct.TShape*)* @M5_Shape_sides to i8*)
,	i8* bitcast (i32(%struct.TLine*)* @M4_Line_sides to i8*)
]}
%struct.RPoly = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@RPoly = global %struct.RPoly{ %struct.TString* @NPoly, i32 10, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.TPoly*)* @Poly_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TPoly*, %struct.TIO*)* @M4_Poly_print to i8*)
,	i8* bitcast (%struct.TShape*(%struct.TPoly*)* @M4_Poly_baseShape to i8*)
]}
%struct.RPoly3 = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RPoly3 = global %struct.RPoly3{ %struct.TString* @NPoly3, i32 10, %struct.__lcpl_rtti* bitcast(%struct.RPoly* @RPoly to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TPoly3*)* @Poly3_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TPoly*, %struct.TIO*)* @M4_Poly_print to i8*)
,	i8* bitcast (%struct.TShape*(%struct.TPoly*)* @M4_Poly_baseShape to i8*)
,	i8* bitcast (%struct.TShape*(%struct.TPoly3*)* @M5_Poly3_baseShape to i8*)
]}
%struct.RPoly1 = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RPoly1 = global %struct.RPoly1{ %struct.TString* @NPoly1, i32 10, %struct.__lcpl_rtti* bitcast(%struct.RPoly* @RPoly to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TPoly1*)* @Poly1_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TPoly*, %struct.TIO*)* @M4_Poly_print to i8*)
,	i8* bitcast (%struct.TShape*(%struct.TPoly*)* @M4_Poly_baseShape to i8*)
,	i8* bitcast (%struct.TShape*(%struct.TPoly1*)* @M5_Poly1_baseShape to i8*)
]}
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 10, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) forVertex
define void @Vertex_init(%struct.TVertex* %self) {
%1 = alloca %struct.TVertex*
store %struct.TVertex* %self, %struct.TVertex** %1
%2 = load %struct.TVertex** %1
%3 = bitcast %struct.TVertex* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

%4 = getelementptr %struct.TVertex* %2, i32 0, i32 1
store i32 0, i32* %4
%5 = getelementptr %struct.TVertex* %2, i32 0, i32 2
store i32 0, i32* %5
%6 = getelementptr %struct.TVertex* %2, i32 0, i32 3
ret void
}
; Class initializer (constructor) forShape
define void @Shape_init(%struct.TShape* %self) {
%1 = alloca %struct.TShape*
store %struct.TShape* %self, %struct.TShape** %1
%2 = load %struct.TShape** %1
%3 = bitcast %struct.TShape* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

ret void
}
; Class initializer (constructor) forTriangle
define void @Triangle_init(%struct.TTriangle* %self) {
%1 = alloca %struct.TTriangle*
store %struct.TTriangle* %self, %struct.TTriangle** %1
%2 = load %struct.TTriangle** %1
%3 = bitcast %struct.TTriangle* %2 to %struct.TShape*
call void @Shape_init(%struct.TShape* %3)

ret void
}
; Class initializer (constructor) forLine
define void @Line_init(%struct.TLine* %self) {
%1 = alloca %struct.TLine*
store %struct.TLine* %self, %struct.TLine** %1
%2 = load %struct.TLine** %1
%3 = bitcast %struct.TLine* %2 to %struct.TShape*
call void @Shape_init(%struct.TShape* %3)

ret void
}
; Class initializer (constructor) forPoly
define void @Poly_init(%struct.TPoly* %self) {
%1 = alloca %struct.TPoly*
store %struct.TPoly* %self, %struct.TPoly** %1
%2 = load %struct.TPoly** %1
%3 = bitcast %struct.TPoly* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

%4 = getelementptr %struct.TPoly* %2, i32 0, i32 1
	%5 = load %struct.TPoly** %1
	%6 = bitcast %struct.TPoly* %5 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %6)
	%7 = getelementptr %struct.TPoly* %5, i32 0, i32 0   ; Locate address of RTTI pointer
	%8 = load %struct.__lcpl_rtti** %7         ; Load RTTI pointer
	%9 = getelementptr %struct.__lcpl_rtti* %8, i32 0, i32 3, i32 5
	%10 = load i8** %9
	%11 = bitcast i8* %10 to %struct.TShape* (%struct.TPoly*)*  ; Convert char * into function pointer
	%12 = call %struct.TShape* %11(%struct.TPoly* %5)

store %struct.TShape* %12, %struct.TShape** %4
%13 = getelementptr %struct.TPoly* %2, i32 0, i32 2
	%14 = load %struct.TPoly** %1
	%15 = getelementptr %struct.TPoly* %14, i32 0, i32 1
	%16 = load %struct.TShape** %15
	%17 = bitcast %struct.TShape* %16 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %17)
	%18 = getelementptr %struct.TShape* %16, i32 0, i32 0   ; Locate address of RTTI pointer
	%19 = load %struct.__lcpl_rtti** %18         ; Load RTTI pointer
	%20 = getelementptr %struct.__lcpl_rtti* %19, i32 0, i32 3, i32 4
	%21 = load i8** %20
	%22 = bitcast i8* %21 to i32 (%struct.TShape*)*  ; Convert char * into function pointer
	%23 = call i32 %22(%struct.TShape* %16)

	%24 = icmp eq i32 %23, 3
	%25 = zext i1 %24 to i32
	%26 = icmp ne i32 %25, 0
	br i1 %26, label %L0, label %L1
L0:
	%27 = alloca %struct.TVertex*
	%28 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RVertex* @RVertex to %struct.__lcpl_rtti*))
	%29 = bitcast i8* %28 to %struct.TVertex*
	store %struct.TVertex* %29, %struct.TVertex** %27
	%30 = alloca %struct.TVertex*
	store %struct.TVertex* null, %struct.TVertex** %30
	%31 = load %struct.TVertex** %27
	%32 = bitcast %struct.TVertex* %31 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %32)
	%33 = getelementptr %struct.TVertex* %31, i32 0, i32 0   ; Locate address of RTTI pointer
	%34 = load %struct.__lcpl_rtti** %33         ; Load RTTI pointer
	%35 = getelementptr %struct.__lcpl_rtti* %34, i32 0, i32 3, i32 5
	%36 = load i8** %35
	%37 = bitcast i8* %36 to void (%struct.TVertex*, i32, i32, %struct.Tvoid*)*  ; Convert char * into function pointer
