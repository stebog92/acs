;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TShape = type { %struct.__lcpl_rtti* , i32, i32, i32, i32}
%struct.TEllipse = type { %struct.__lcpl_rtti* , i32, i32, i32, i32, i32, i32}
%struct.TMain = type { %struct.__lcpl_rtti* }
; Name of classes
@class_name.Shape = internal constant [6 x i8] c"Shape\00"
@NShape = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 5, i8* getelementptr ([6 x i8]* @class_name.Shape, i32 0, i32 0) }
@class_name.Ellipse = internal constant [8 x i8] c"Ellipse\00"
@NEllipse = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 7, i8* getelementptr ([8 x i8]* @class_name.Ellipse, i32 0, i32 0) }
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

@string_constant.0 = constant [2 x i8] c"(\00"
@_string_constant.0 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.0, i32 0, i32 0) }
@string_constant.1 = constant [2 x i8] c",\00"
@_string_constant.1 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.1, i32 0, i32 0) }
@string_constant.2 = constant [3 x i8] c")(\00"
@_string_constant.2 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 2, i8* getelementptr ([3 x i8]* @string_constant.2, i32 0, i32 0) }
@string_constant.3 = constant [2 x i8] c",\00"
@_string_constant.3 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.3, i32 0, i32 0) }
@string_constant.4 = constant [2 x i8] c")\00"
@_string_constant.4 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.4, i32 0, i32 0) }
@string_constant.5 = constant [2 x i8] c"(\00"
@_string_constant.5 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.5, i32 0, i32 0) }
@string_constant.6 = constant [2 x i8] c",\00"
@_string_constant.6 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.6, i32 0, i32 0) }
@string_constant.7 = constant [3 x i8] c")(\00"
@_string_constant.7 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 2, i8* getelementptr ([3 x i8]* @string_constant.7, i32 0, i32 0) }
@string_constant.8 = constant [2 x i8] c",\00"
@_string_constant.8 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.8, i32 0, i32 0) }
@string_constant.9 = constant [2 x i8] c")\00"
@_string_constant.9 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.9, i32 0, i32 0) }
@string_constant.10 = constant [2 x i8] c"[\00"
@_string_constant.10 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.10, i32 0, i32 0) }
@string_constant.11 = constant [2 x i8] c"]\00"
@_string_constant.11 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.11, i32 0, i32 0) }
@string_constant.12 = constant [2 x i8] c"(\00"
@_string_constant.12 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.12, i32 0, i32 0) }
@string_constant.13 = constant [2 x i8] c",\00"
@_string_constant.13 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.13, i32 0, i32 0) }
@string_constant.14 = constant [3 x i8] c")(\00"
@_string_constant.14 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 2, i8* getelementptr ([3 x i8]* @string_constant.14, i32 0, i32 0) }
@string_constant.15 = constant [2 x i8] c",\00"
@_string_constant.15 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.15, i32 0, i32 0) }
@string_constant.16 = constant [2 x i8] c")\00"
@_string_constant.16 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.16, i32 0, i32 0) }
@string_constant.17 = constant [2 x i8] c"[\00"
@_string_constant.17 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.17, i32 0, i32 0) }
@string_constant.18 = constant [2 x i8] c"]\00"
@_string_constant.18 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.18, i32 0, i32 0) }
@string_constant.19 = constant [2 x i8] c"\0A\00"
@_string_constant.19 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.19, i32 0, i32 0) }
@string_constant.20 = constant [4 x i8] c" > \00"
@_string_constant.20 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 3, i8* getelementptr ([4 x i8]* @string_constant.20, i32 0, i32 0) }
@string_constant.21 = constant [5 x i8] c" vs \00"
@_string_constant.21 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @string_constant.21, i32 0, i32 0) }
@string_constant.22 = constant [2 x i8] c"\0A\00"
@_string_constant.22 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @string_constant.22, i32 0, i32 0) }
; Runtime type information and virtual tables
;
%struct.RShape = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RShape = global %struct.RShape{ %struct.TString* @NShape, i32 16, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TShape*)* @Shape_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TShape*, i32, i32, i32, i32)* @M5_Shape_init to i8*)
,	i8* bitcast (void(%struct.TShape*, %struct.TIO*)* @M5_Shape_print to i8*)
,	i8* bitcast (i32(%struct.TShape*)* @M5_Shape_area to i8*)
]}
%struct.REllipse = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [11 x i8*] }
@REllipse = global %struct.REllipse{ %struct.TString* @NEllipse, i32 22, %struct.__lcpl_rtti* bitcast(%struct.RShape* @RShape to %struct.__lcpl_rtti*),
[11 x i8*] [i8* bitcast (void (%struct.TEllipse*)* @Ellipse_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TShape*, i32, i32, i32, i32)* @M5_Shape_init to i8*)
,	i8* bitcast (void(%struct.TShape*, %struct.TIO*)* @M5_Shape_print to i8*)
,	i8* bitcast (i32(%struct.TShape*)* @M5_Shape_area to i8*)
,	i8* bitcast (void(%struct.TEllipse*, i32, i32, i32, i32)* @M7_Ellipse_init to i8*)
,	i8* bitcast (void(%struct.TEllipse*, i32, i32)* @M7_Ellipse_setR to i8*)
,	i8* bitcast (void(%struct.TEllipse*, %struct.TIO*)* @M7_Ellipse_print to i8*)
,	i8* bitcast (i32(%struct.TEllipse*)* @M7_Ellipse_area to i8*)
]}
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [8 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[8 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (void(%struct.TMain*, %struct.TShape*)* @M4_Main_print to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) forShape
define void @Shape_init(%struct.TShape* %self) {
%1 = alloca %struct.TShape*
store %struct.TShape* %self, %struct.TShape** %1
%2 = load %struct.TShape** %1
%3 = bitcast %struct.TShape* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

%4 = getelementptr %struct.TShape* %2, i32 0, i32 1
store i32 0, i32* %4
%5 = getelementptr %struct.TShape* %2, i32 0, i32 2
store i32 0, i32* %5
%6 = getelementptr %struct.TShape* %2, i32 0, i32 3
store i32 0, i32* %6
%7 = getelementptr %struct.TShape* %2, i32 0, i32 4
store i32 0, i32* %7
ret void
}
; Class initializer (constructor) forEllipse
define void @Ellipse_init(%struct.TEllipse* %self) {
%1 = alloca %struct.TEllipse*
store %struct.TEllipse* %self, %struct.TEllipse** %1
%2 = load %struct.TEllipse** %1
%3 = bitcast %struct.TEllipse* %2 to %struct.TShape*
call void @Shape_init(%struct.TShape* %3)

%4 = getelementptr %struct.TEllipse* %2, i32 0, i32 1
store i32 0, i32* %4
%5 = getelementptr %struct.TEllipse* %2, i32 0, i32 2
store i32 0, i32* %5
ret void
}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TIO*
call void @IO_init(%struct.TIO* %3)

ret void
}

define void @M5_Shape_init (%struct.TShape* %self, i32 %x, i32 %y, i32 %dx, i32 %dy) {
	; Prologue - save parameters
	%1 = alloca %struct.TShape*
	store %struct.TShape* %self, %struct.TShape** %1

	%2 = alloca i32
	store i32 %x, i32* %2
	%3 = alloca i32
	store i32 %y, i32* %3
	%4 = alloca i32
	store i32 %dx, i32* %4
	%5 = alloca i32
	store i32 %dy, i32* %5
	%6 = load i32* %2
	%7 = load %struct.TShape** %1
	%8 = getelementptr %struct.TShape* %7, i32 0, i32 1
	store i32 %6, i32* %8
	%9 = load i32* %3
	%10 = load %struct.TShape** %1
	%11 = getelementptr %struct.TShape* %10, i32 0, i32 2
	store i32 %9, i32* %11
	%12 = load i32* %2
	%13 = load i32* %4
	%14 = add i32 %12, %13
	%15 = load %struct.TShape** %1
	%16 = getelementptr %struct.TShape* %15, i32 0, i32 3
	store i32 %14, i32* %16
	%17 = load i32* %3
	%18 = load i32* %5
	%19 = add i32 %17, %18
	%20 = load %struct.TShape** %1
	%21 = getelementptr %struct.TShape* %20, i32 0, i32 4
	store i32 %19, i32* %21
	ret void
}
define void @M5_Shape_print (%struct.TShape* %self, %struct.TIO* %stream) {
	; Prologue - save parameters
	%1 = alloca %struct.TShape*
	store %struct.TShape* %self, %struct.TShape** %1

	%2 = alloca %struct.TIO*
	store %struct.TIO* %stream, %struct.TIO** %2
	%3 = load %struct.TIO** %2
	%4 = bitcast %struct.TIO* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.TIO* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 5
	%8 = load i8** %7
	%9 = bitcast i8* %8 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%10 = load %struct.TShape** %1
	%11 = getelementptr %struct.TShape* %10, i32 0, i32 1
	%12 = load i32* %11
	%13 = call %struct.TString* @__lcpl_intToString(i32 %12)
	%14 = call %struct.TString* @M6_String_concat(%struct.TString* @_string_constant.12, %struct.TString* %13)
	%15 = call %struct.TString* @M6_String_concat(%struct.TString* %14, %struct.TString* @_string_constant.15)
	%16 = load %struct.TShape** %1
	%17 = getelementptr %struct.TShape* %16, i32 0, i32 2
	%18 = load i32* %17
	%19 = call %struct.TString* @__lcpl_intToString(i32 %18)
	%20 = call %struct.TString* @M6_String_concat(%struct.TString* %15, %struct.TString* %19)
	%21 = call %struct.TString* @M6_String_concat(%struct.TString* %20, %struct.TString* @_string_constant.14)
	%22 = load %struct.TShape** %1
	%23 = getelementptr %struct.TShape* %22, i32 0, i32 3
	%24 = load i32* %23
	%25 = call %struct.TString* @__lcpl_intToString(i32 %24)
	%26 = call %struct.TString* @M6_String_concat(%struct.TString* %21, %struct.TString* %25)
	%27 = call %struct.TString* @M6_String_concat(%struct.TString* %26, %struct.TString* @_string_constant.15)
	%28 = load %struct.TShape** %1
	%29 = getelementptr %struct.TShape* %28, i32 0, i32 4
	%30 = load i32* %29
	%31 = call %struct.TString* @__lcpl_intToString(i32 %30)
	%32 = call %struct.TString* @M6_String_concat(%struct.TString* %27, %struct.TString* %31)
	%33 = call %struct.TString* @M6_String_concat(%struct.TString* %32, %struct.TString* @_string_constant.16)
	%34 = call %struct.TIO* %9(%struct.TIO* %3, %struct.TString* %33)

	ret void
}
define i32 @M5_Shape_area (%struct.TShape* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TShape*
	store %struct.TShape* %self, %struct.TShape** %1

	%2 = load %struct.TShape** %1
	%3 = getelementptr %struct.TShape* %2, i32 0, i32 3
	%4 = load i32* %3
	%5 = load %struct.TShape** %1
	%6 = getelementptr %struct.TShape* %5, i32 0, i32 1
	%7 = load i32* %6
	%8 = sub i32 %4, %7
	%9 = load %struct.TShape** %1
	%10 = getelementptr %struct.TShape* %9, i32 0, i32 4
	%11 = load i32* %10
	%12 = load %struct.TShape** %1
	%13 = getelementptr %struct.TShape* %12, i32 0, i32 2
	%14 = load i32* %13
	%15 = sub i32 %11, %14
	%16 = mul i32 %8, %15
	ret i32 %16
}
define void @M7_Ellipse_init (%struct.TEllipse* %self, i32 %x, i32 %y, i32 %dx, i32 %dy) {
	; Prologue - save parameters
	%1 = alloca %struct.TEllipse*
	store %struct.TEllipse* %self, %struct.TEllipse** %1

	%2 = alloca i32
	store i32 %x, i32* %2
	%3 = alloca i32
	store i32 %y, i32* %3
	%4 = alloca i32
	store i32 %dx, i32* %4
	%5 = alloca i32
	store i32 %dy, i32* %5
	%6 = load %struct.TEllipse** %1
	%7 = bitcast %struct.TEllipse* %6 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %7)
	%8 = getelementptr %struct.TEllipse* %6, i32 0, i32 0   ; Locate address of RTTI pointer
	%9 = load %struct.__lcpl_rtti** %8         ; Load RTTI pointer
	%10 = getelementptr %struct.__lcpl_rtti* %9, i32 0, i32 3, i32 4
	%11 = load i8** %10
	%12 = bitcast i8* %11 to void (%struct.TShape*, i32, i32, i32, i32)*  ; Convert char * into function pointer
	%13 = bitcast %struct.TEllipse* %6 to %struct.TShape*
	%14 = load i32* %2
	%15 = load i32* %3
	%16 = load i32* %4
	%17 = load i32* %5
	call void %12(%struct.TShape* %13, i32 %14, i32 %15, i32 %16, i32 %17)

	%18 = load i32* %4
%19 = udiv i32 %18, 2
	%20 = load %struct.TEllipse** %1
	%21 = getelementptr %struct.TEllipse* %20, i32 0, i32 5
	store i32 %19, i32* %21
	%22 = load i32* %5
%23 = udiv i32 %22, 2
	%24 = load %struct.TEllipse** %1
	%25 = getelementptr %struct.TEllipse* %24, i32 0, i32 6
	store i32 %23, i32* %25
	ret void
}
define void @M7_Ellipse_setR (%struct.TEllipse* %self, i32 %rx, i32 %ry) {
	; Prologue - save parameters
	%1 = alloca %struct.TEllipse*
	store %struct.TEllipse* %self, %struct.TEllipse** %1

	%2 = alloca i32
	store i32 %rx, i32* %2
	%3 = alloca i32
	store i32 %ry, i32* %3
	%4 = load i32* %2
	%5 = load %struct.TEllipse** %1
	%6 = getelementptr %struct.TEllipse* %5, i32 0, i32 5
	store i32 %4, i32* %6
	%7 = load i32* %3
	%8 = load %struct.TEllipse** %1
	%9 = getelementptr %struct.TEllipse* %8, i32 0, i32 6
	store i32 %7, i32* %9
	ret void
}
define void @M7_Ellipse_print (%struct.TEllipse* %self, %struct.TIO* %stream) {
	; Prologue - save parameters
	%1 = alloca %struct.TEllipse*
	store %struct.TEllipse* %self, %struct.TEllipse** %1

	%2 = alloca %struct.TIO*
	store %struct.TIO* %stream, %struct.TIO** %2
	%3 = load %struct.TEllipse** %1
	%4 = bitcast %struct.TEllipse* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.TEllipse* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 5
	%8 = load i8** %7
	%9 = bitcast i8* %8 to void (%struct.TShape*, %struct.TIO*)*  ; Convert char * into function pointer
	%10 = bitcast %struct.TEllipse* %3 to %struct.TShape*
	%11 = load %struct.TIO** %2
	call void %9(%struct.TShape* %10, %struct.TIO* %11)

	%12 = load %struct.TIO** %2
	%13 = bitcast %struct.TIO* %12 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %13)
	%14 = getelementptr %struct.TIO* %12, i32 0, i32 0   ; Locate address of RTTI pointer
	%15 = load %struct.__lcpl_rtti** %14         ; Load RTTI pointer
	%16 = getelementptr %struct.__lcpl_rtti* %15, i32 0, i32 3, i32 5
	%17 = load i8** %16
	%18 = bitcast i8* %17 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%19 = load %struct.TEllipse** %1
	%20 = getelementptr %struct.TEllipse* %19, i32 0, i32 5
	%21 = load i32* %20
	%22 = load %struct.TEllipse** %1
	%23 = getelementptr %struct.TEllipse* %22, i32 0, i32 6
	%24 = load i32* %23
	%25 = add i32 %21, %24
%26 = udiv i32 %25, 2
	%27 = call %struct.TString* @__lcpl_intToString(i32 %26)
	%28 = call %struct.TString* @M6_String_concat(%struct.TString* @_string_constant.17, %struct.TString* %27)
	%29 = call %struct.TString* @M6_String_concat(%struct.TString* %28, %struct.TString* @_string_constant.18)
	%30 = call %struct.TIO* %18(%struct.TIO* %12, %struct.TString* %29)

	ret void
}
define i32 @M7_Ellipse_area (%struct.TEllipse* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TEllipse*
	store %struct.TEllipse* %self, %struct.TEllipse** %1

	%2 = load %struct.TEllipse** %1
	%3 = getelementptr %struct.TEllipse* %2, i32 0, i32 5
	%4 = load i32* %3
	%5 = load %struct.TEllipse** %1
	%6 = getelementptr %struct.TEllipse* %5, i32 0, i32 6
	%7 = load i32* %6
	%8 = mul i32 %4, %7
	%9 = mul i32 %8, 314
%10 = udiv i32 %9, 100
	ret i32 %10
}
define void @M4_Main_print (%struct.TMain* %self, %struct.TShape* %s) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = alloca %struct.TShape*
	store %struct.TShape* %s, %struct.TShape** %2
	%3 = load %struct.TShape** %2
	%4 = bitcast %struct.TShape* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.TShape* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 5
	%8 = load i8** %7
	%9 = bitcast i8* %8 to void (%struct.TShape*, %struct.TIO*)*  ; Convert char * into function pointer
	%10 = load %struct.TMain** %1
	%11 = bitcast %struct.TMain* %10 to i8*
	%12 = call i8* @__lcpl_cast(i8* %11, %struct.__lcpl_rtti* bitcast (%struct.RIO* @RIO to %struct.__lcpl_rtti*))
	%13 = bitcast i8* %12 to %struct.TIO*
	call void %9(%struct.TShape* %3, %struct.TIO* %13)

	%14 = load %struct.TMain** %1
	%15 = bitcast %struct.TMain* %14 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %15)
	%16 = getelementptr %struct.TMain* %14, i32 0, i32 0   ; Locate address of RTTI pointer
	%17 = load %struct.__lcpl_rtti** %16         ; Load RTTI pointer
	%18 = getelementptr %struct.__lcpl_rtti* %17, i32 0, i32 3, i32 5
	%19 = load i8** %18
	%20 = bitcast i8* %19 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%21 = bitcast %struct.TMain* %14 to %struct.TIO*
	%22 = load %struct.TShape** %2
	%23 = bitcast %struct.TShape* %22 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %23)
	%24 = getelementptr %struct.TShape* %22, i32 0, i32 0   ; Locate address of RTTI pointer
	%25 = load %struct.__lcpl_rtti** %24         ; Load RTTI pointer
	%26 = getelementptr %struct.__lcpl_rtti* %25, i32 0, i32 3, i32 2
	%27 = load i8** %26
	%28 = bitcast i8* %27 to %struct.TString* (%struct.TShape*)*  ; Convert char * into function pointer
	%29 = call %struct.TString* %28(%struct.TShape* %22)

	%30 = call %struct.TString* @M6_String_concat(%struct.TString* %29, %struct.TString* @_string_constant.22)
	%31 = call %struct.TIO* %20(%struct.TIO* %21, %struct.TString* %30)

	%32 = load %struct.TMain** %1
	%33 = bitcast %struct.TMain* %32 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %33)
	%34 = getelementptr %struct.TMain* %32, i32 0, i32 0   ; Locate address of RTTI pointer
	%35 = load %struct.__lcpl_rtti** %34         ; Load RTTI pointer
	%36 = getelementptr %struct.__lcpl_rtti* %35, i32 0, i32 3, i32 5
	%37 = load i8** %36
	%38 = bitcast i8* %37 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%39 = bitcast %struct.TMain* %32 to %struct.TIO*
	%40 = load %struct.TShape** %2
	%41 = bitcast %struct.TShape* %40 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %41)
	%42 = getelementptr %struct.TShape* %40, i32 0, i32 0   ; Locate address of RTTI pointer
	%43 = load %struct.__lcpl_rtti** %42         ; Load RTTI pointer
	%44 = getelementptr %struct.__lcpl_rtti* %43, i32 0, i32 3, i32 6
	%45 = load i8** %44
	%46 = bitcast i8* %45 to i32 (%struct.TShape*)*  ; Convert char * into function pointer
	%47 = call i32 %46(%struct.TShape* %40)

	%48 = call %struct.TString* @__lcpl_intToString(i32 %47)
	%49 = call %struct.TString* @M6_String_concat(%struct.TString* @_string_constant.20, %struct.TString* %48)
	%50 = call %struct.TString* @M6_String_concat(%struct.TString* %49, %struct.TString* @_string_constant.21)
	%51 = load %struct.TShape** %2
	%52 = bitcast %struct.TShape* %51 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %52)
	%53 = getelementptr %struct.TShape* %51, i32 0, i32 0   ; Locate address of RTTI pointer
	%54 = load %struct.__lcpl_rtti** %53         ; Load RTTI pointer
	%55 = getelementptr %struct.__lcpl_rtti* %54, i32 0, i32 3, i32 6
	%56 = load i8** %55
	%57 = bitcast i8* %56 to i32 (%struct.TShape*)*  ; Convert char * into function pointer
	%58 = call i32 %57(%struct.TShape* %51)

	%59 = call %struct.TString* @__lcpl_intToString(i32 %58)
	%60 = call %struct.TString* @M6_String_concat(%struct.TString* %50, %struct.TString* %59)
	%61 = call %struct.TString* @M6_String_concat(%struct.TString* %60, %struct.TString* @_string_constant.22)
	%62 = call %struct.TIO* %38(%struct.TIO* %39, %struct.TString* %61)

	ret void
}
define void @M4_Main_main (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = alloca %struct.TShape*
	%3 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.REllipse* @REllipse to %struct.__lcpl_rtti*))
	%4 = bitcast i8* %3 to %struct.TEllipse*
	%5 = bitcast %struct.TEllipse* %4 to i8*
	%6 = call i8* @__lcpl_cast(i8* %5, %struct.__lcpl_rtti* bitcast (%struct.RShape* @RShape to %struct.__lcpl_rtti*))
	%7 = bitcast i8* %6 to %struct.TShape*
	store %struct.TShape* %7, %struct.TShape** %2
	%8 = alloca %struct.TShape*
	%9 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RShape* @RShape to %struct.__lcpl_rtti*))
	%10 = bitcast i8* %9 to %struct.TShape*
	store %struct.TShape* %10, %struct.TShape** %8
	%11 = alloca %struct.TShape*
	store %struct.TShape* null, %struct.TShape** %11
	%12 = load %struct.TShape** %2
	%13 = bitcast %struct.TShape* %12 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %13)
	%14 = getelementptr %struct.TShape* %12, i32 0, i32 0   ; Locate address of RTTI pointer
	%15 = load %struct.__lcpl_rtti** %14         ; Load RTTI pointer
	%16 = getelementptr %struct.__lcpl_rtti* %15, i32 0, i32 3, i32 7
	%17 = load i8** %16
	%18 = bitcast i8* %17 to void (%struct.TShape*, i32, i32, i32, i32)*  ; Convert char * into function pointer
	call void %18(%struct.TShape* %12, i32 1, i32 2, i32 10, i32 20)

	%19 = load %struct.TShape** %8
	%20 = bitcast %struct.TShape* %19 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %20)
	%21 = getelementptr %struct.TShape* %19, i32 0, i32 0   ; Locate address of RTTI pointer
	%22 = load %struct.__lcpl_rtti** %21         ; Load RTTI pointer
	%23 = getelementptr %struct.__lcpl_rtti* %22, i32 0, i32 3, i32 4
	%24 = load i8** %23
	%25 = bitcast i8* %24 to void (%struct.TShape*, i32, i32, i32, i32)*  ; Convert char * into function pointer
	call void %25(%struct.TShape* %19, i32 0, i32 0, i32 100, i32 100)

	%26 = load %struct.TShape** %2
	%27 = bitcast %struct.TShape* %26 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %27)
	%28 = getelementptr %struct.TShape* %26, i32 0, i32 0   ; Locate address of RTTI pointer
	%29 = load %struct.__lcpl_rtti** %28         ; Load RTTI pointer
	%30 = getelementptr %struct.__lcpl_rtti* %29, i32 0, i32 3, i32 3
	%31 = load i8** %30
	%32 = bitcast i8* %31 to %struct.TObject* (%struct.TShape*)*  ; Convert char * into function pointer
	%33 = call %struct.TObject* %32(%struct.TShape* %26)

	%34 = bitcast %struct.TObject* %33 to i8*
	%35 = call i8* @__lcpl_cast(i8* %34, %struct.__lcpl_rtti* bitcast (%struct.RShape* @RShape to %struct.__lcpl_rtti*))
	%36 = bitcast i8* %35 to %struct.TShape*
	store %struct.TShape* %36, %struct.TShape** %11
	%37 = load %struct.TShape** %11
	%38 = bitcast %struct.TShape* %37 to i8*
	%39 = call i8* @__lcpl_cast(i8* %38, %struct.__lcpl_rtti* bitcast (%struct.REllipse* @REllipse to %struct.__lcpl_rtti*))
	%40 = bitcast i8* %39 to %struct.TEllipse*
	%41 = bitcast %struct.TEllipse* %40 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %41)
	%42 = getelementptr %struct.TEllipse* %40, i32 0, i32 0   ; Locate address of RTTI pointer
	%43 = load %struct.__lcpl_rtti** %42         ; Load RTTI pointer
	%44 = getelementptr %struct.__lcpl_rtti* %43, i32 0, i32 3, i32 8
	%45 = load i8** %44
	%46 = bitcast i8* %45 to void (%struct.TEllipse*, i32, i32)*  ; Convert char * into function pointer
	call void %46(%struct.TEllipse* %40, i32 8, i32 10)

	%47 = load %struct.TMain** %1
	%48 = bitcast %struct.TMain* %47 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %48)
	%49 = getelementptr %struct.TMain* %47, i32 0, i32 0   ; Locate address of RTTI pointer
	%50 = load %struct.__lcpl_rtti** %49         ; Load RTTI pointer
	%51 = getelementptr %struct.__lcpl_rtti* %50, i32 0, i32 3, i32 6
	%52 = load i8** %51
	%53 = bitcast i8* %52 to void (%struct.TMain*, %struct.TShape*)*  ; Convert char * into function pointer
	%54 = load %struct.TShape** %2
	call void %53(%struct.TMain* %47, %struct.TShape* %54)

	%55 = load %struct.TMain** %1
	%56 = bitcast %struct.TMain* %55 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %56)
	%57 = getelementptr %struct.TMain* %55, i32 0, i32 0   ; Locate address of RTTI pointer
	%58 = load %struct.__lcpl_rtti** %57         ; Load RTTI pointer
	%59 = getelementptr %struct.__lcpl_rtti* %58, i32 0, i32 3, i32 6
	%60 = load i8** %59
	%61 = bitcast i8* %60 to void (%struct.TMain*, %struct.TShape*)*  ; Convert char * into function pointer
	%62 = load %struct.TShape** %8
	call void %61(%struct.TMain* %55, %struct.TShape* %62)

	%63 = load %struct.TMain** %1
	%64 = bitcast %struct.TMain* %63 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %64)
	%65 = getelementptr %struct.TMain* %63, i32 0, i32 0   ; Locate address of RTTI pointer
	%66 = load %struct.__lcpl_rtti** %65         ; Load RTTI pointer
	%67 = getelementptr %struct.__lcpl_rtti* %66, i32 0, i32 3, i32 6
	%68 = load i8** %67
	%69 = bitcast i8* %68 to void (%struct.TMain*, %struct.TShape*)*  ; Convert char * into function pointer
	%70 = load %struct.TShape** %11
	call void %69(%struct.TMain* %63, %struct.TShape* %70)

	ret void
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 7
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
