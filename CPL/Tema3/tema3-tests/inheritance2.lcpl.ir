;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.Tt = type { %struct.__lcpl_rtti* }
%struct.TMain = type { %struct.__lcpl_rtti* , %struct.Tx*}
%struct.Tp = type { %struct.__lcpl_rtti* }
%struct.Tph = type { %struct.__lcpl_rtti* , %struct.Tx*}
%struct.Tq = type { %struct.__lcpl_rtti* }
%struct.Tr = type { %struct.__lcpl_rtti* }
%struct.Tx = type { %struct.__lcpl_rtti* }
; Name of classes
@class_name.t = internal constant [2 x i8] c"t\00"
@Nt = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.t, i32 0, i32 0) }
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
@class_name.p = internal constant [2 x i8] c"p\00"
@Np = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.p, i32 0, i32 0) }
@class_name.ph = internal constant [3 x i8] c"ph\00"
@Nph = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 2, i8* getelementptr ([3 x i8]* @class_name.ph, i32 0, i32 0) }
@class_name.q = internal constant [2 x i8] c"q\00"
@Nq = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.q, i32 0, i32 0) }
@class_name.r = internal constant [2 x i8] c"r\00"
@Nr = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.r, i32 0, i32 0) }
@class_name.x = internal constant [2 x i8] c"x\00"
@Nx = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.x, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

; Runtime type information and virtual tables
;
%struct.Rt = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [8 x i8*] }
@Rt = global %struct.Rt{ %struct.TString* @Nt, i32 4, %struct.__lcpl_rtti* bitcast(%struct.Rp* @Rp to %struct.__lcpl_rtti*),
[8 x i8*] [i8* bitcast (void (%struct.Tt*)* @t_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (i32(%struct.Tr*)* @M1_r_val to i8*)
,	i8* bitcast (i32(%struct.Tq*)* @M1_q_val to i8*)
,	i8* bitcast (i32(%struct.Tp*)* @M1_p_val to i8*)
,	i8* bitcast (i32(%struct.Tt*)* @M1_t_value to i8*)
]}
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 7, %struct.__lcpl_rtti* bitcast(%struct.Rph* @Rph to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
%struct.Rp = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@Rp = global %struct.Rp{ %struct.TString* @Np, i32 4, %struct.__lcpl_rtti* bitcast(%struct.Rq* @Rq to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.Tp*)* @p_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (i32(%struct.Tr*)* @M1_r_val to i8*)
,	i8* bitcast (i32(%struct.Tq*)* @M1_q_val to i8*)
,	i8* bitcast (i32(%struct.Tp*)* @M1_p_val to i8*)
]}
%struct.Rph = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@Rph = global %struct.Rph{ %struct.TString* @Nph, i32 7, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.Tph*)* @ph_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
]}
%struct.Rq = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@Rq = global %struct.Rq{ %struct.TString* @Nq, i32 4, %struct.__lcpl_rtti* bitcast(%struct.Rr* @Rr to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.Tq*)* @q_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (i32(%struct.Tr*)* @M1_r_val to i8*)
,	i8* bitcast (i32(%struct.Tq*)* @M1_q_val to i8*)
]}
%struct.Rr = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [5 x i8*] }
@Rr = global %struct.Rr{ %struct.TString* @Nr, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[5 x i8*] [i8* bitcast (void (%struct.Tr*)* @r_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (i32(%struct.Tr*)* @M1_r_val to i8*)
]}
%struct.Rx = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [9 x i8*] }
@Rx = global %struct.Rx{ %struct.TString* @Nx, i32 4, %struct.__lcpl_rtti* bitcast(%struct.Rt* @Rt to %struct.__lcpl_rtti*),
[9 x i8*] [i8* bitcast (void (%struct.Tx*)* @x_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (i32(%struct.Tr*)* @M1_r_val to i8*)
,	i8* bitcast (i32(%struct.Tq*)* @M1_q_val to i8*)
,	i8* bitcast (i32(%struct.Tp*)* @M1_p_val to i8*)
,	i8* bitcast (i32(%struct.Tt*)* @M1_t_value to i8*)
,	i8* bitcast (i32(%struct.Tx*)* @M1_x_value to i8*)
]}
; Class initializer (constructor) fort
define void @t_init(%struct.Tt* %self) {
%1 = alloca %struct.Tt*
store %struct.Tt* %self, %struct.Tt** %1
%2 = load %struct.Tt** %1
%3 = bitcast %struct.Tt* %2 to %struct.Tp*
call void @p_init(%struct.Tp* %3)

ret void
}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.Tph*
call void @ph_init(%struct.Tph* %3)

ret void
}
; Class initializer (constructor) forp
define void @p_init(%struct.Tp* %self) {
%1 = alloca %struct.Tp*
store %struct.Tp* %self, %struct.Tp** %1
%2 = load %struct.Tp** %1
%3 = bitcast %struct.Tp* %2 to %struct.Tq*
call void @q_init(%struct.Tq* %3)

ret void
}
; Class initializer (constructor) forph
define void @ph_init(%struct.Tph* %self) {
%1 = alloca %struct.Tph*
store %struct.Tph* %self, %struct.Tph** %1
%2 = load %struct.Tph** %1
%3 = bitcast %struct.Tph* %2 to %struct.TIO*
call void @IO_init(%struct.TIO* %3)

%4 = getelementptr %struct.Tph* %2, i32 0, i32 1
	%5 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.Rx* @Rx to %struct.__lcpl_rtti*))
	%6 = bitcast i8* %5 to %struct.Tx*
store %struct.Tx* %6, %struct.Tx** %4
ret void
}
; Class initializer (constructor) forq
define void @q_init(%struct.Tq* %self) {
%1 = alloca %struct.Tq*
store %struct.Tq* %self, %struct.Tq** %1
%2 = load %struct.Tq** %1
%3 = bitcast %struct.Tq* %2 to %struct.Tr*
call void @r_init(%struct.Tr* %3)

ret void
}
; Class initializer (constructor) forr
define void @r_init(%struct.Tr* %self) {
%1 = alloca %struct.Tr*
store %struct.Tr* %self, %struct.Tr** %1
%2 = load %struct.Tr** %1
%3 = bitcast %struct.Tr* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

ret void
}
; Class initializer (constructor) forx
define void @x_init(%struct.Tx* %self) {
%1 = alloca %struct.Tx*
store %struct.Tx* %self, %struct.Tx** %1
%2 = load %struct.Tx** %1
%3 = bitcast %struct.Tx* %2 to %struct.Tt*
call void @t_init(%struct.Tt* %3)

ret void
}

define i32 @M1_t_value (%struct.Tt* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.Tt*
	store %struct.Tt* %self, %struct.Tt** %1

	ret i32 7
}
define void @M4_Main_main (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = load %struct.TMain** %1
	%3 = bitcast %struct.TMain* %2 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0   ; Locate address of RTTI pointer
	%5 = load %struct.__lcpl_rtti** %4         ; Load RTTI pointer
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3, i32 5
	%7 = load i8** %6
	%8 = bitcast i8* %7 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%9 = bitcast %struct.TMain* %2 to %struct.TIO*
	%10 = load %struct.TMain** %1
	%11 = getelementptr %struct.TMain* %10, i32 0, i32 1
	%12 = load %struct.Tx** %11
	%13 = bitcast %struct.Tx* %12 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %13)
	%14 = getelementptr %struct.Tx* %12, i32 0, i32 0   ; Locate address of RTTI pointer
	%15 = load %struct.__lcpl_rtti** %14         ; Load RTTI pointer
	%16 = getelementptr %struct.__lcpl_rtti* %15, i32 0, i32 3, i32 6
	%17 = load i8** %16
	%18 = bitcast i8* %17 to i32 (%struct.Tx*)*  ; Convert char * into function pointer
	%19 = call i32 %18(%struct.Tx* %12)

	%20 = load %struct.TMain** %1
	%21 = getelementptr %struct.TMain* %20, i32 0, i32 1
	%22 = load %struct.Tx** %21
	%23 = bitcast %struct.Tx* %22 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %23)
	%24 = getelementptr %struct.Tx* %22, i32 0, i32 0   ; Locate address of RTTI pointer
	%25 = load %struct.__lcpl_rtti** %24         ; Load RTTI pointer
	%26 = getelementptr %struct.__lcpl_rtti* %25, i32 0, i32 3, i32 8
	%27 = load i8** %26
	%28 = bitcast i8* %27 to i32 (%struct.Tx*)*  ; Convert char * into function pointer
	%29 = call i32 %28(%struct.Tx* %22)

	%30 = mul i32 %19, %29
	%31 = call %struct.TString* @__lcpl_intToString(i32 %30)
	%32 = call %struct.TIO* %8(%struct.TIO* %9, %struct.TString* %31)

	ret void
}
define i32 @M1_p_val (%struct.Tp* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.Tp*
	store %struct.Tp* %self, %struct.Tp** %1

	ret i32 6
}
define i32 @M1_q_val (%struct.Tq* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.Tq*
	store %struct.Tq* %self, %struct.Tq** %1

	ret i32 5
}
define i32 @M1_r_val (%struct.Tr* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.Tr*
	store %struct.Tr* %self, %struct.Tr** %1

	ret i32 4
}
define i32 @M1_x_value (%struct.Tx* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.Tx*
	store %struct.Tx* %self, %struct.Tx** %1

	ret i32 8
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 6
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
