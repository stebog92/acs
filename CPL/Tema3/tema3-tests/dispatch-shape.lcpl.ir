;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TShape = type { %struct.__lcpl_rtti* }
%struct.TCircle = type { %struct.__lcpl_rtti* }
%struct.TMain = type { %struct.__lcpl_rtti* }
; Name of classes
@class_name.Shape = internal constant [6 x i8] c"Shape\00"
@NShape = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 5, i8* getelementptr ([6 x i8]* @class_name.Shape, i32 0, i32 0) }
@class_name.Circle = internal constant [7 x i8] c"Circle\00"
@NCircle = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 6, i8* getelementptr ([7 x i8]* @class_name.Circle, i32 0, i32 0) }
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

@string_constant.0 = constant [25 x i8] c"This is a generic shape\0A\00"
@_string_constant.0 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 24, i8* getelementptr ([25 x i8]* @string_constant.0, i32 0, i32 0) }
@string_constant.1 = constant [25 x i8] c"This is a generic shape\0A\00"
@_string_constant.1 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 24, i8* getelementptr ([25 x i8]* @string_constant.1, i32 0, i32 0) }
@string_constant.2 = constant [18 x i8] c"This is a circle\0A\00"
@_string_constant.2 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 17, i8* getelementptr ([18 x i8]* @string_constant.2, i32 0, i32 0) }
@string_constant.3 = constant [25 x i8] c"This is a generic shape\0A\00"
@_string_constant.3 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 24, i8* getelementptr ([25 x i8]* @string_constant.3, i32 0, i32 0) }
@string_constant.4 = constant [18 x i8] c"This is a circle\0A\00"
@_string_constant.4 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 17, i8* getelementptr ([18 x i8]* @string_constant.4, i32 0, i32 0) }
; Runtime type information and virtual tables
;
%struct.RShape = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [5 x i8*] }
@RShape = global %struct.RShape{ %struct.TString* @NShape, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[5 x i8*] [i8* bitcast (void (%struct.TShape*)* @Shape_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TShape*, %struct.TIO*)* @M5_Shape_print to i8*)
]}
%struct.RCircle = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@RCircle = global %struct.RCircle{ %struct.TString* @NCircle, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RShape* @RShape to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.TCircle*)* @Circle_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TShape*, %struct.TIO*)* @M5_Shape_print to i8*)
,	i8* bitcast (void(%struct.TCircle*, %struct.TIO*)* @M6_Circle_print to i8*)
]}
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) forShape
define void @Shape_init(%struct.TShape* %self) {
%1 = alloca %struct.TShape*
store %struct.TShape* %self, %struct.TShape** %1
%2 = load %struct.TShape** %1
%3 = bitcast %struct.TShape* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

ret void
}
; Class initializer (constructor) forCircle
define void @Circle_init(%struct.TCircle* %self) {
%1 = alloca %struct.TCircle*
store %struct.TCircle* %self, %struct.TCircle** %1
%2 = load %struct.TCircle** %1
%3 = bitcast %struct.TCircle* %2 to %struct.TShape*
call void @Shape_init(%struct.TShape* %3)

ret void
}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TIO*
call void @IO_init(%struct.TIO* %3)

ret void
}

define void @M5_Shape_print (%struct.TShape* %self, %struct.TIO* %stream) {
	; Prologue - save parameters
	%1 = alloca %struct.TShape*
	store %struct.TShape* %self, %struct.TShape** %1

	%2 = alloca %struct.TIO*
	store %struct.TIO* %stream, %struct.TIO** %2
	%3 = load %struct.TIO** %2
	%4 = bitcast %struct.TIO* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.TIO* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 5
	%8 = load i8** %7
	%9 = bitcast i8* %8 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%10 = call %struct.TIO* %9(%struct.TIO* %3, %struct.TString* @_string_constant.3)

	ret void
}
define void @M6_Circle_print (%struct.TCircle* %self, %struct.TIO* %stream) {
	; Prologue - save parameters
	%1 = alloca %struct.TCircle*
	store %struct.TCircle* %self, %struct.TCircle** %1

	%2 = alloca %struct.TIO*
	store %struct.TIO* %stream, %struct.TIO** %2
	%3 = load %struct.TIO** %2
	%4 = bitcast %struct.TIO* %3 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %4)
	%5 = getelementptr %struct.TIO* %3, i32 0, i32 0   ; Locate address of RTTI pointer
	%6 = load %struct.__lcpl_rtti** %5         ; Load RTTI pointer
	%7 = getelementptr %struct.__lcpl_rtti* %6, i32 0, i32 3, i32 5
	%8 = load i8** %7
	%9 = bitcast i8* %8 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%10 = call %struct.TIO* %9(%struct.TIO* %3, %struct.TString* @_string_constant.4)

	ret void
}
define void @M4_Main_main (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = alloca %struct.TShape*
	%3 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RCircle* @RCircle to %struct.__lcpl_rtti*))
	%4 = bitcast i8* %3 to %struct.TCircle*
	%5 = bitcast %struct.TCircle* %4 to i8*
	%6 = call i8* @__lcpl_cast(i8* %5, %struct.__lcpl_rtti* bitcast (%struct.RShape* @RShape to %struct.__lcpl_rtti*))
	%7 = bitcast i8* %6 to %struct.TShape*
	store %struct.TShape* %7, %struct.TShape** %2
	%8 = load %struct.TShape** %2
	%9 = bitcast %struct.TShape* %8 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %9)
	%10 = getelementptr %struct.TShape* %8, i32 0, i32 0   ; Locate address of RTTI pointer
	%11 = load %struct.__lcpl_rtti** %10         ; Load RTTI pointer
	%12 = getelementptr %struct.__lcpl_rtti* %11, i32 0, i32 3, i32 5
	%13 = load i8** %12
	%14 = bitcast i8* %13 to void (%struct.TShape*, %struct.TIO*)*  ; Convert char * into function pointer
	%15 = load %struct.TMain** %1
	%16 = bitcast %struct.TMain* %15 to i8*
	%17 = call i8* @__lcpl_cast(i8* %16, %struct.__lcpl_rtti* bitcast (%struct.RIO* @RIO to %struct.__lcpl_rtti*))
	%18 = bitcast i8* %17 to %struct.TIO*
	call void %14(%struct.TShape* %8, %struct.TIO* %18)

	%19 = load %struct.TShape** %2
	%20 = bitcast %struct.TShape* %19 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %20)
	%21 = getelementptr %struct.TShape* %19, i32 0, i32 0   ; Locate address of RTTI pointer
	%22 = load %struct.__lcpl_rtti** %21         ; Load RTTI pointer
	%23 = getelementptr %struct.__lcpl_rtti* %22, i32 0, i32 3, i32 4
	%24 = load i8** %23
	%25 = bitcast i8* %24 to void (%struct.TShape*, %struct.TIO*)*  ; Convert char * into function pointer
	%26 = load %struct.TMain** %1
	%27 = bitcast %struct.TMain* %26 to i8*
	%28 = call i8* @__lcpl_cast(i8* %27, %struct.__lcpl_rtti* bitcast (%struct.RIO* @RIO to %struct.__lcpl_rtti*))
	%29 = bitcast i8* %28 to %struct.TIO*
	call void %25(%struct.TShape* %19, %struct.TIO* %29)

	ret void
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 6
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
