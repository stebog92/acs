;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TK = type { %struct.__lcpl_rtti* }
%struct.TMain = type { %struct.__lcpl_rtti* }
; Name of classes
@class_name.K = internal constant [2 x i8] c"K\00"
@NK = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.K, i32 0, i32 0) }
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

@string_constant.0 = constant [5 x i8] c"Main\00"
@_string_constant.0 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @string_constant.0, i32 0, i32 0) }
@string_constant.1 = constant [9 x i8] c"Original\00"
@_string_constant.1 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 8, i8* getelementptr ([9 x i8]* @string_constant.1, i32 0, i32 0) }
@string_constant.2 = constant [15 x i8] c"...Unreachable\00"
@_string_constant.2 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 14, i8* getelementptr ([15 x i8]* @string_constant.2, i32 0, i32 0) }
@string_constant.3 = constant [13 x i8] c"...Reachable\00"
@_string_constant.3 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 12, i8* getelementptr ([13 x i8]* @string_constant.3, i32 0, i32 0) }
@string_constant.4 = constant [5 x i8] c"Main\00"
@_string_constant.4 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @string_constant.4, i32 0, i32 0) }
@string_constant.5 = constant [9 x i8] c"Original\00"
@_string_constant.5 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 8, i8* getelementptr ([9 x i8]* @string_constant.5, i32 0, i32 0) }
@string_constant.6 = constant [15 x i8] c"...Unreachable\00"
@_string_constant.6 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 14, i8* getelementptr ([15 x i8]* @string_constant.6, i32 0, i32 0) }
@string_constant.7 = constant [13 x i8] c"...Reachable\00"
@_string_constant.7 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 12, i8* getelementptr ([13 x i8]* @string_constant.7, i32 0, i32 0) }
; Runtime type information and virtual tables
;
%struct.RK = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RK = global %struct.RK{ %struct.TString* @NK, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TK*)* @K_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (void(%struct.TK*)* @M1_K_main to i8*)
]}
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RK* @RK to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (void(%struct.TK*)* @M1_K_main to i8*)
]}
; Class initializer (constructor) forK
define void @K_init(%struct.TK* %self) {
%1 = alloca %struct.TK*
store %struct.TK* %self, %struct.TK** %1
%2 = load %struct.TK** %1
%3 = bitcast %struct.TK* %2 to %struct.TIO*
call void @IO_init(%struct.TIO* %3)

ret void
}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TK*
call void @K_init(%struct.TK* %3)

ret void
}

define void @M1_K_main (%struct.TK* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TK*
	store %struct.TK* %self, %struct.TK** %1

	%2 = load %struct.TK** %1
	%3 = bitcast %struct.TK* %2 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TK* %2, i32 0, i32 0   ; Locate address of RTTI pointer
	%5 = load %struct.__lcpl_rtti** %4         ; Load RTTI pointer
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3, i32 2
	%7 = load i8** %6
	%8 = bitcast i8* %7 to %struct.TString* (%struct.TObject*)*  ; Convert char * into function pointer
	%9 = bitcast %struct.TK* %2 to %struct.TObject*
	%10 = call %struct.TString* %8(%struct.TObject* %9)

	%11 = icmp eq i32 %10, @_string_constant.4
	%12 = zext i1 %11 to i32
	%13 = icmp ne i32 %12, 0
	br i1 %13, label %L0, label %L1
L0:
	%14 = load %struct.TK** %1
	%15 = bitcast %struct.TK* %14 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %15)
	%16 = getelementptr %struct.TK* %14, i32 0, i32 0   ; Locate address of RTTI pointer
	%17 = load %struct.__lcpl_rtti** %16         ; Load RTTI pointer
	%18 = getelementptr %struct.__lcpl_rtti* %17, i32 0, i32 3, i32 5
	%19 = load i8** %18
	%20 = bitcast i8* %19 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%21 = bitcast %struct.TK* %14 to %struct.TIO*
	%22 = bitcast %struct.TString* @_string_constant.5 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %22)
	%23 = getelementptr %struct.TString* @_string_constant.5, i32 0, i32 0   ; Locate address of RTTI pointer
	%24 = load %struct.__lcpl_rtti** %23         ; Load RTTI pointer
	%25 = getelementptr %struct.__lcpl_rtti* %24, i32 0, i32 3, i32 3
	%26 = load i8** %25
	%27 = bitcast i8* %26 to %struct.TObject* (%struct.TString*)*  ; Convert char * into function pointer
	%28 = call %struct.TObject* %27(%struct.TString* %22)

	%29 = bitcast %struct.TObject* %28 to i8*
	%30 = call i8* @__lcpl_cast(i8* %29, %struct.__lcpl_rtti* bitcast (%struct.RString* @RString to %struct.__lcpl_rtti*))
	%31 = bitcast i8* %30 to %struct.TString*
	%32 = call %struct.TString* @M6_String_substring(%struct.TString* %%31, i32 1, i32 6)
	%1 = call %struct.TString* @M6_String_substring(%struct.TString* %%0, i32 1, i32 3)
	%1 = call %struct.TIO* %20(%struct.TIO* %21, %struct.TString* %0)

	%2 = load %struct.TK** %1
	%3 = bitcast %struct.TK* %2 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TK* %2, i32 0, i32 0   ; Locate address of RTTI pointer
	%5 = load %struct.__lcpl_rtti** %4         ; Load RTTI pointer
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3, i32 1
	%7 = load i8** %6
	%8 = bitcast i8* %7 to void (%struct.TObject*)*  ; Convert char * into function pointer
	%9 = bitcast %struct.TK* %2 to %struct.TObject*
	call void %8(%struct.TObject* %9)

	%10 = load %struct.TK** %1
	%11 = bitcast %struct.TK* %10 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %11)
	%12 = getelementptr %struct.TK* %10, i32 0, i32 0   ; Locate address of RTTI pointer
	%13 = load %struct.__lcpl_rtti** %12         ; Load RTTI pointer
	%14 = getelementptr %struct.__lcpl_rtti* %13, i32 0, i32 3, i32 5
	%15 = load i8** %14
	%16 = bitcast i8* %15 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%17 = bitcast %struct.TK* %10 to %struct.TIO*
	%18 = call %struct.TIO* %16(%struct.TIO* %17, %struct.TString* @_string_constant.6)

L1:
	%19 = load %struct.TK** %1
	%20 = bitcast %struct.TK* %19 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %20)
	%21 = getelementptr %struct.TK* %19, i32 0, i32 0   ; Locate address of RTTI pointer
	%22 = load %struct.__lcpl_rtti** %21         ; Load RTTI pointer
	%23 = getelementptr %struct.__lcpl_rtti* %22, i32 0, i32 3, i32 5
	%24 = load i8** %23
	%25 = bitcast i8* %24 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%26 = bitcast %struct.TK* %19 to %struct.TIO*
	%27 = call %struct.TIO* %25(%struct.TIO* %26, %struct.TString* @_string_constant.7)

	%28 = phi i32 [ %18, %L2 ], [ %27, %L2 ]
	ret void
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 6
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
