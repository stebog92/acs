;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TA = type { %struct.__lcpl_rtti* }
%struct.TB = type { %struct.__lcpl_rtti* }
%struct.TMain = type { %struct.__lcpl_rtti* , %struct.TB*}
; Name of classes
@class_name.A = internal constant [2 x i8] c"A\00"
@NA = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.A, i32 0, i32 0) }
@class_name.B = internal constant [2 x i8] c"B\00"
@NB = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.B, i32 0, i32 0) }
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

; Runtime type information and virtual tables
;
%struct.RA = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [5 x i8*] }
@RA = global %struct.RA{ %struct.TString* @NA, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[5 x i8*] [i8* bitcast (void (%struct.TA*)* @A_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (i32(%struct.TA*, i32, i32)* @M1_A_method to i8*)
]}
%struct.RB = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@RB = global %struct.RB{ %struct.TString* @NB, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RA* @RA to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.TB*)* @B_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (i32(%struct.TA*, i32, i32)* @M1_A_method to i8*)
,	i8* bitcast (i32(%struct.TB*, i32, i32)* @M1_B_method to i8*)
]}
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 7, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) forA
define void @A_init(%struct.TA* %self) {
%1 = alloca %struct.TA*
store %struct.TA* %self, %struct.TA** %1
%2 = load %struct.TA** %1
%3 = bitcast %struct.TA* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

ret void
}
; Class initializer (constructor) forB
define void @B_init(%struct.TB* %self) {
%1 = alloca %struct.TB*
store %struct.TB* %self, %struct.TB** %1
%2 = load %struct.TB** %1
%3 = bitcast %struct.TB* %2 to %struct.TA*
call void @A_init(%struct.TA* %3)

ret void
}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TIO*
call void @IO_init(%struct.TIO* %3)

%4 = getelementptr %struct.TMain* %2, i32 0, i32 1
	%5 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RB* @RB to %struct.__lcpl_rtti*))
	%6 = bitcast i8* %5 to %struct.TB*
store %struct.TB* %6, %struct.TB** %4
ret void
}

define i32 @M1_A_method (%struct.TA* %self, i32 %a, i32 %b) {
	; Prologue - save parameters
	%1 = alloca %struct.TA*
	store %struct.TA* %self, %struct.TA** %1

	%2 = alloca i32
	store i32 %a, i32* %2
	%3 = alloca i32
	store i32 %b, i32* %3
	%4 = load i32* %2
	%5 = load i32* %3
	%6 = add i32 %4, %5
	ret i32 %6
}
define i32 @M1_B_method (%struct.TB* %self, i32 %a, i32 %b) {
	; Prologue - save parameters
	%1 = alloca %struct.TB*
	store %struct.TB* %self, %struct.TB** %1

	%2 = alloca i32
	store i32 %a, i32* %2
	%3 = alloca i32
	store i32 %b, i32* %3
	%4 = load i32* %2
	%5 = load i32* %3
	%6 = mul i32 %4, %5
	ret i32 %6
}
define void @M4_Main_main (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = load %struct.TMain** %1
	%3 = bitcast %struct.TMain* %2 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0   ; Locate address of RTTI pointer
	%5 = load %struct.__lcpl_rtti** %4         ; Load RTTI pointer
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3, i32 5
	%7 = load i8** %6
	%8 = bitcast i8* %7 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%9 = bitcast %struct.TMain* %2 to %struct.TIO*
	%10 = load %struct.TMain** %1
	%11 = getelementptr %struct.TMain* %10, i32 0, i32 1
	%12 = load %struct.TB** %11
	%13 = bitcast %struct.TB* %12 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %13)
	%14 = getelementptr %struct.TB* %12, i32 0, i32 0   ; Locate address of RTTI pointer
	%15 = load %struct.__lcpl_rtti** %14         ; Load RTTI pointer
	%16 = getelementptr %struct.__lcpl_rtti* %15, i32 0, i32 3, i32 5
	%17 = load i8** %16
	%18 = bitcast i8* %17 to i32 (%struct.TB*, i32, i32)*  ; Convert char * into function pointer
	%19 = call i32 %18(%struct.TB* %12, i32 1, i32 2)

	%20 = call %struct.TString* @__lcpl_intToString(i32 %19)
	%21 = call %struct.TIO* %8(%struct.TIO* %9, %struct.TString* %20)

	%22 = load %struct.TMain** %1
	%23 = bitcast %struct.TMain* %22 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %23)
	%24 = getelementptr %struct.TMain* %22, i32 0, i32 0   ; Locate address of RTTI pointer
	%25 = load %struct.__lcpl_rtti** %24         ; Load RTTI pointer
	%26 = getelementptr %struct.__lcpl_rtti* %25, i32 0, i32 3, i32 5
	%27 = load i8** %26
	%28 = bitcast i8* %27 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%29 = bitcast %struct.TMain* %22 to %struct.TIO*
	%30 = load %struct.TMain** %1
	%31 = getelementptr %struct.TMain* %30, i32 0, i32 1
	%32 = load %struct.TB** %31
	%33 = bitcast %struct.TB* %32 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %33)
	%34 = getelementptr %struct.TB* %32, i32 0, i32 0   ; Locate address of RTTI pointer
	%35 = load %struct.__lcpl_rtti** %34         ; Load RTTI pointer
	%36 = getelementptr %struct.__lcpl_rtti* %35, i32 0, i32 3, i32 4
	%37 = load i8** %36
	%38 = bitcast i8* %37 to i32 (%struct.TB*, i32, i32)*  ; Convert char * into function pointer
	%39 = call i32 %38(%struct.TB* %32, i32 3, i32 4)

	%40 = call %struct.TString* @__lcpl_intToString(i32 %39)
	%41 = call %struct.TIO* %28(%struct.TIO* %29, %struct.TString* %40)

	%42 = load %struct.TMain** %1
	%43 = bitcast %struct.TMain* %42 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %43)
	%44 = getelementptr %struct.TMain* %42, i32 0, i32 0   ; Locate address of RTTI pointer
	%45 = load %struct.__lcpl_rtti** %44         ; Load RTTI pointer
	%46 = getelementptr %struct.__lcpl_rtti* %45, i32 0, i32 3, i32 5
	%47 = load i8** %46
	%48 = bitcast i8* %47 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%49 = bitcast %struct.TMain* %42 to %struct.TIO*
	%50 = load %struct.TMain** %1
	%51 = getelementptr %struct.TMain* %50, i32 0, i32 1
	%52 = load %struct.TB** %51
	%53 = bitcast %struct.TB* %52 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %53)
	%54 = getelementptr %struct.TB* %52, i32 0, i32 0   ; Locate address of RTTI pointer
	%55 = load %struct.__lcpl_rtti** %54         ; Load RTTI pointer
	%56 = getelementptr %struct.__lcpl_rtti* %55, i32 0, i32 3, i32 5
	%57 = load i8** %56
	%58 = bitcast i8* %57 to i32 (%struct.TB*, i32, i32)*  ; Convert char * into function pointer
	%59 = call i32 %58(%struct.TB* %52, i32 5, i32 6)

	%60 = call %struct.TString* @__lcpl_intToString(i32 %59)
	%61 = call %struct.TIO* %48(%struct.TIO* %49, %struct.TString* %60)

	ret void
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 6
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
