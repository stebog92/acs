;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TintModel = type { %struct.__lcpl_rtti* , i32}
%struct.Tint = type { %struct.__lcpl_rtti* , i32}
%struct.TMain = type { %struct.__lcpl_rtti* }
; Name of classes
@class_name.intModel = internal constant [9 x i8] c"intModel\00"
@NintModel = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 8, i8* getelementptr ([9 x i8]* @class_name.intModel, i32 0, i32 0) }
@class_name.int = internal constant [4 x i8] c"int\00"
@Nint = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 3, i8* getelementptr ([4 x i8]* @class_name.int, i32 0, i32 0) }
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

; Runtime type information and virtual tables
;
%struct.RintModel = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [5 x i8*] }
@RintModel = global %struct.RintModel{ %struct.TString* @NintModel, i32 7, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[5 x i8*] [i8* bitcast (void (%struct.TintModel*)* @intModel_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TintModel*, i32)* @M8_intModel_setValue to i8*)
]}
%struct.Rint = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [6 x i8*] }
@Rint = global %struct.Rint{ %struct.TString* @Nint, i32 7, %struct.__lcpl_rtti* bitcast(%struct.RintModel* @RintModel to %struct.__lcpl_rtti*),
[6 x i8*] [i8* bitcast (void (%struct.Tint*)* @int_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TintModel*, i32)* @M8_intModel_setValue to i8*)
,	i8* bitcast (i32(%struct.Tint*)* @M3_int_getValue to i8*)
]}
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [8 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[8 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (i32(%struct.TMain*, i32, i32, %struct.Tint*)* @M4_Main_mac to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) forintModel
define void @intModel_init(%struct.TintModel* %self) {
%1 = alloca %struct.TintModel*
store %struct.TintModel* %self, %struct.TintModel** %1
%2 = load %struct.TintModel** %1
%3 = bitcast %struct.TintModel* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

%4 = getelementptr %struct.TintModel* %2, i32 0, i32 1
store i32 0, i32* %4
ret void
}
; Class initializer (constructor) forint
define void @int_init(%struct.Tint* %self) {
%1 = alloca %struct.Tint*
store %struct.Tint* %self, %struct.Tint** %1
%2 = load %struct.Tint** %1
%3 = bitcast %struct.Tint* %2 to %struct.TintModel*
call void @intModel_init(%struct.TintModel* %3)

ret void
}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TIO*
call void @IO_init(%struct.TIO* %3)

ret void
}

define void @M8_intModel_setValue (%struct.TintModel* %self, i32 %value) {
	; Prologue - save parameters
	%1 = alloca %struct.TintModel*
	store %struct.TintModel* %self, %struct.TintModel** %1

	%2 = alloca i32
	store i32 %value, i32* %2
	%3 = load i32* %2
	%4 = load %struct.TintModel** %1
	%5 = getelementptr %struct.TintModel* %4, i32 0, i32 1
	store i32 %3, i32* %5
	ret void
}
define i32 @M3_int_getValue (%struct.Tint* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.Tint*
	store %struct.Tint* %self, %struct.Tint** %1

	%2 = load %struct.Tint** %1
	%3 = getelementptr %struct.Tint* %2, i32 0, i32 1
	%4 = load i32* %3
	ret i32 %4
}
define i32 @M4_Main_mac (%struct.TMain* %self, i32 %a, i32 %b, %struct.Tint* %c) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = alloca i32
	store i32 %a, i32* %2
	%3 = alloca i32
	store i32 %b, i32* %3
	%4 = alloca %struct.Tint*
	store %struct.Tint* %c, %struct.Tint** %4
	%5 = load i32* %2
	%6 = load i32* %3
	%7 = mul i32 %5, %6
	%8 = load %struct.Tint** %4
	%9 = bitcast %struct.Tint* %8 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %9)
	%10 = getelementptr %struct.Tint* %8, i32 0, i32 0   ; Locate address of RTTI pointer
	%11 = load %struct.__lcpl_rtti** %10         ; Load RTTI pointer
	%12 = getelementptr %struct.__lcpl_rtti* %11, i32 0, i32 3, i32 5
	%13 = load i8** %12
	%14 = bitcast i8* %13 to i32 (%struct.Tint*)*  ; Convert char * into function pointer
	%15 = call i32 %14(%struct.Tint* %8)

	%16 = add i32 %7, %15
	ret i32 %16
}
define void @M4_Main_main (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = alloca %struct.TintModel*
	%3 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.Rint* @Rint to %struct.__lcpl_rtti*))
	%4 = bitcast i8* %3 to %struct.Tint*
	%5 = bitcast %struct.Tint* %4 to i8*
	%6 = call i8* @__lcpl_cast(i8* %5, %struct.__lcpl_rtti* bitcast (%struct.RintModel* @RintModel to %struct.__lcpl_rtti*))
	%7 = bitcast i8* %6 to %struct.TintModel*
	store %struct.TintModel* %7, %struct.TintModel** %2
	%8 = load %struct.TintModel** %2
	%9 = bitcast %struct.TintModel* %8 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %9)
	%10 = getelementptr %struct.TintModel* %8, i32 0, i32 0   ; Locate address of RTTI pointer
	%11 = load %struct.__lcpl_rtti** %10         ; Load RTTI pointer
	%12 = getelementptr %struct.__lcpl_rtti* %11, i32 0, i32 3, i32 4
	%13 = load i8** %12
	%14 = bitcast i8* %13 to void (%struct.TintModel*, i32)*  ; Convert char * into function pointer
	call void %14(%struct.TintModel* %8, i32 3)

	%15 = load %struct.TMain** %1
	%16 = bitcast %struct.TMain* %15 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %16)
	%17 = getelementptr %struct.TMain* %15, i32 0, i32 0   ; Locate address of RTTI pointer
	%18 = load %struct.__lcpl_rtti** %17         ; Load RTTI pointer
	%19 = getelementptr %struct.__lcpl_rtti* %18, i32 0, i32 3, i32 5
	%20 = load i8** %19
	%21 = bitcast i8* %20 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%22 = bitcast %struct.TMain* %15 to %struct.TIO*
	%23 = load %struct.TMain** %1
	%24 = bitcast %struct.TMain* %23 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %24)
	%25 = getelementptr %struct.TMain* %23, i32 0, i32 0   ; Locate address of RTTI pointer
	%26 = load %struct.__lcpl_rtti** %25         ; Load RTTI pointer
	%27 = getelementptr %struct.__lcpl_rtti* %26, i32 0, i32 3, i32 6
	%28 = load i8** %27
	%29 = bitcast i8* %28 to i32 (%struct.TMain*, i32, i32, %struct.Tint*)*  ; Convert char * into function pointer
	%30 = load %struct.TintModel** %2
	%31 = bitcast %struct.TintModel* %30 to i8*
	%32 = call i8* @__lcpl_cast(i8* %31, %struct.__lcpl_rtti* bitcast (%struct.Rint* @Rint to %struct.__lcpl_rtti*))
	%33 = bitcast i8* %32 to %struct.Tint*
	%34 = call i32 %29(%struct.TMain* %23, i32 1, i32 2, %struct.Tint* %33)

	%35 = call %struct.TString* @__lcpl_intToString(i32 %34)
	%36 = call %struct.TIO* %21(%struct.TIO* %22, %struct.TString* %35)

	ret void
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 7
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
