;;;;;;;;;; Standard data types from runtime

%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }

@RObject = external global %struct.__lcpl_rtti
@RString = external global %struct.__lcpl_rtti
@RIO = external global %struct.__lcpl_rtti

declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)

declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)

declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)

;;;;;;;;;; Custom code

; Structure of classes
;
%struct.TMain = type { %struct.__lcpl_rtti* }

; Name of classes
;
@.str = constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* @RString, i32 4, i8* getelementptr ([5 x i8]* @.str, i32 0, i32 0) }
;; Conversion : str -> &(str[0]) , convert char[5] into char *              ^^^

; String constants used in the program
;
@.str1 = constant [13 x i8] c"Hello world!\00"
@S0 = global %struct.TString { %struct.__lcpl_rtti* @RString, i32 12, i8* getelementptr ([13 x i8]* @.str1, i32 0, i32 0) }

; Runtime type information and virtual tables
;
%0 = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RMain = global %0 { %struct.TString* @NMain, i32 4, %struct.__lcpl_rtti* @RIO, 
  [7 x i8*] [
    i8* bitcast (void (%struct.TMain*)* @Main_init to i8*), 
    i8* bitcast (void (%struct.TObject*)* @M6_Object_abort to i8*), 
    i8* bitcast (%struct.TString* (%struct.TObject*)* @M6_Object_typeName to i8*), 
    i8* bitcast (%struct.TObject* (%struct.TObject*)* @M6_Object_copy to i8*), 
    i8* bitcast (%struct.TString* (%struct.TIO*)* @M2_IO_in to i8*), 
    i8* bitcast (%struct.TIO* (%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*), 
    i8* bitcast (void (%struct.TMain*)* @M4_Main_main to i8*)
    ]}

; Class initializer (constructor) for Main
define void @Main_init(%struct.TMain* %self) {
  %1 = alloca %struct.TMain*
  store %struct.TMain* %self, %struct.TMain** %1
  
  %2 = load %struct.TMain** %1
  %3 = bitcast %struct.TMain* %2 to %struct.TIO*
  call void @IO_init(%struct.TIO* %3)
  
  ret void
}


define void @M4_Main_main(%struct.TMain* %self) {
  ; Prologue - save parameters
  %1 = alloca %struct.TMain*
  store %struct.TMain* %self, %struct.TMain** %1
  
  ; Dispatch to out method
  %2 = load %struct.TMain** %1                                ; Load object

  %3 = bitcast %struct.TMain* %2 to i8*                       ; Null ptr check 
  call void @__lcpl_checkNull(i8* %3)
  
  %4 = getelementptr %struct.TMain* %2, i32 0, i32 0          ; Locate address of RTTI pointer
  %5 = load %struct.__lcpl_rtti** %4                        ; Load RTTI pointer
  %6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3  ; Locate adress of vtable in RTTI
  %7 = bitcast [0 x i8*]* %6 to i8**                        ; Convert char*[] into char **
  %8 = getelementptr i8** %7, i32 5                         ; Get index of method into vtable
  %9 = load i8** %8                                         ; Load method address from vtable
  %10 = bitcast i8* %9 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
  %11 = bitcast %struct.TMain* %2 to %struct.TIO*
  %12 = call %struct.TIO* %10(%struct.TIO* %11, %struct.TString* @S0)
  
  ret void
}


define void @startup() {
  %1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%0* @RMain to %struct.__lcpl_rtti*)) ; Create main object
  %2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
  
  ; Dispatch to main method
  %3 = bitcast %struct.TMain* %2 to i8*                       
  call void @__lcpl_checkNull(i8* %3)
  %4 = getelementptr %struct.TMain* %2, i32 0, i32 0          
  %5 = load %struct.__lcpl_rtti** %4            
  %6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3  
  %7 = bitcast [0 x i8*]* %6 to i8**            
  %8 = getelementptr i8** %7, i32 6                         
  %9 = load i8** %8                            
  %10 = bitcast i8* %9 to void (%struct.TMain*)* 
  call void %10(%struct.TMain* %2)
  
  ret void
}

