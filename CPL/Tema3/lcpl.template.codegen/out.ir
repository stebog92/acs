;;;;;;; Standard data types from runtime
%struct.TObject = type { %struct.__lcpl_rtti* }
%struct.TString = type { %struct.__lcpl_rtti*, i32, i8* }
%struct.TIO = type { %struct.__lcpl_rtti* }
%struct.__lcpl_rtti = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [0 x i8*] }


%struct.RObject = type %struct.__lcpl_rtti*
@RObject = external global %struct.RObject
%struct.RString = type %struct.__lcpl_rtti*
@RString = external global %struct.RString
%struct.RIO = type %struct.__lcpl_rtti*
@RIO = external global %struct.RIO
declare void @Object_init(%struct.TObject*)
declare void @M6_Object_abort(%struct.TObject*)
declare %struct.TString* @M6_Object_typeName(%struct.TObject*)
declare %struct.TObject* @M6_Object_copy(%struct.TObject*)
declare void @IO_init(%struct.TIO*)
declare %struct.TString* @M2_IO_in(%struct.TIO*)
declare %struct.TIO* @M2_IO_out(%struct.TIO*, %struct.TString*)
declare void @String_init(%struct.TString*)
declare i32 @M6_String_length(%struct.TString*)
declare i32 @M6_String_toInt(%struct.TString*)
declare %struct.TString* @M6_String_substring(%struct.TString*, i32, i32)
declare %struct.TString* @M6_String_concat(%struct.TString*, %struct.TString*)
declare i32 @M6_String_equal(%struct.TString*, %struct.TString*)


declare i8* @__lcpl_new(%struct.__lcpl_rtti*)
declare void @__lcpl_checkNull(i8*)
declare i8* @__lcpl_cast(i8*, %struct.__lcpl_rtti*)
declare %struct.TString* @__lcpl_intToString(i32)
;;;;;;; Custom code
;
; Structure of classes
;
%struct.TA = type { %struct.__lcpl_rtti* }
%struct.TB = type { %struct.__lcpl_rtti* }
%struct.TMain = type { %struct.__lcpl_rtti* }
; Name of classes
@class_name.A = internal constant [2 x i8] c"A\00"
@NA = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.A, i32 0, i32 0) }
@class_name.B = internal constant [2 x i8] c"B\00"
@NB = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 1, i8* getelementptr ([2 x i8]* @class_name.B, i32 0, i32 0) }
@class_name.Main = internal constant [5 x i8] c"Main\00"
@NMain = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 4, i8* getelementptr ([5 x i8]* @class_name.Main, i32 0, i32 0) }
; String constants used in the program
@string_constant.strEmpty = internal constant [1 x i8] c"\00"

@_string_constant.strEmpty = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 0, i8* getelementptr ([1 x i8]* @string_constant.strEmpty, i32 0, i32 0)}

@string_constant.0 = constant [20 x i8] c"Hello from class A!\00"
@_string_constant.0 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 19, i8* getelementptr ([20 x i8]* @string_constant.0, i32 0, i32 0) }
@string_constant.1 = constant [20 x i8] c"Hello from class A!\00"
@_string_constant.1 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 19, i8* getelementptr ([20 x i8]* @string_constant.1, i32 0, i32 0) }
@string_constant.2 = constant [18 x i8] c"Bye says B, then!\00"
@_string_constant.2 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 17, i8* getelementptr ([18 x i8]* @string_constant.2, i32 0, i32 0) }
@string_constant.3 = constant [20 x i8] c"Hello from class A!\00"
@_string_constant.3 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 19, i8* getelementptr ([20 x i8]* @string_constant.3, i32 0, i32 0) }
@string_constant.4 = constant [18 x i8] c"Bye says B, then!\00"
@_string_constant.4 = global %struct.TString { %struct.__lcpl_rtti* bitcast(%struct.RString* @RString to %struct.__lcpl_rtti*), i32 17, i8* getelementptr ([18 x i8]* @string_constant.4, i32 0, i32 0) }
; Runtime type information and virtual tables
;
%struct.RA = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [7 x i8*] }
@RA = global %struct.RA{ %struct.TString* @NA, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RIO* @RIO to %struct.__lcpl_rtti*),
[7 x i8*] [i8* bitcast (void (%struct.TA*)* @A_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (%struct.TA*(%struct.TA*)* @M1_A_greet to i8*)
]}
%struct.RB = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [8 x i8*] }
@RB = global %struct.RB{ %struct.TString* @NB, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RA* @RA to %struct.__lcpl_rtti*),
[8 x i8*] [i8* bitcast (void (%struct.TB*)* @B_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (%struct.TString*(%struct.TIO*)* @M2_IO_in to i8*)
,	i8* bitcast (%struct.TIO*(%struct.TIO*, %struct.TString*)* @M2_IO_out to i8*)
,	i8* bitcast (%struct.TA*(%struct.TA*)* @M1_A_greet to i8*)
,	i8* bitcast (%struct.TB*(%struct.TB*)* @M1_B_goodbye to i8*)
]}
%struct.RMain = type { %struct.TString*, i32, %struct.__lcpl_rtti*, [5 x i8*] }
@RMain = global %struct.RMain{ %struct.TString* @NMain, i32 4, %struct.__lcpl_rtti* bitcast(%struct.RObject* @RObject to %struct.__lcpl_rtti*),
[5 x i8*] [i8* bitcast (void (%struct.TMain*)* @Main_init to i8*)
,	i8* bitcast (void(%struct.TObject*)* @M6_Object_abort to i8*)
,	i8* bitcast (%struct.TString*(%struct.TObject*)* @M6_Object_typeName to i8*)
,	i8* bitcast (%struct.TObject*(%struct.TObject*)* @M6_Object_copy to i8*)
,	i8* bitcast (void(%struct.TMain*)* @M4_Main_main to i8*)
]}
; Class initializer (constructor) forA
define void @A_init(%struct.TA* %self) {
%1 = alloca %struct.TA*
store %struct.TA* %self, %struct.TA** %1
%2 = load %struct.TA** %1
%3 = bitcast %struct.TA* %2 to %struct.TIO*
call void @IO_init(%struct.TIO* %3)

ret void
}
; Class initializer (constructor) forB
define void @B_init(%struct.TB* %self) {
%1 = alloca %struct.TB*
store %struct.TB* %self, %struct.TB** %1
%2 = load %struct.TB** %1
%3 = bitcast %struct.TB* %2 to %struct.TA*
call void @A_init(%struct.TA* %3)

ret void
}
; Class initializer (constructor) forMain
define void @Main_init(%struct.TMain* %self) {
%1 = alloca %struct.TMain*
store %struct.TMain* %self, %struct.TMain** %1
%2 = load %struct.TMain** %1
%3 = bitcast %struct.TMain* %2 to %struct.TObject*
call void @Object_init(%struct.TObject* %3)

ret void
}

define %struct.TA* @M1_A_greet (%struct.TA* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TA*
	store %struct.TA* %self, %struct.TA** %1

	%2 = load %struct.TA** %1
	%3 = bitcast %struct.TA* %2 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TA* %2, i32 0, i32 0   ; Locate address of RTTI pointer
	%5 = load %struct.__lcpl_rtti** %4         ; Load RTTI pointer
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3, i32 5
	%7 = load i8** %6
	%8 = bitcast i8* %7 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%9 = bitcast %struct.TA* %2 to %struct.TIO*
	%10 = call %struct.TIO* %8(%struct.TIO* %9, %struct.TString* @_string_constant.3)

	%11 = bitcast %struct.TIO* %10 to i8*
	%12 = call i8* @__lcpl_cast(i8* %11, %struct.__lcpl_rtti* bitcast (%struct.RA* @RA to %struct.__lcpl_rtti*))
	%13 = bitcast i8* %12 to %struct.TA*
	ret %struct.TA* %13
}
define %struct.TB* @M1_B_goodbye (%struct.TB* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TB*
	store %struct.TB* %self, %struct.TB** %1

	%2 = load %struct.TB** %1
	%3 = bitcast %struct.TB* %2 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TB* %2, i32 0, i32 0   ; Locate address of RTTI pointer
	%5 = load %struct.__lcpl_rtti** %4         ; Load RTTI pointer
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3, i32 5
	%7 = load i8** %6
	%8 = bitcast i8* %7 to %struct.TIO* (%struct.TIO*, %struct.TString*)*  ; Convert char * into function pointer
	%9 = bitcast %struct.TB* %2 to %struct.TIO*
	%10 = call %struct.TIO* %8(%struct.TIO* %9, %struct.TString* @_string_constant.4)

	%11 = bitcast %struct.TIO* %10 to i8*
	%12 = call i8* @__lcpl_cast(i8* %11, %struct.__lcpl_rtti* bitcast (%struct.RB* @RB to %struct.__lcpl_rtti*))
	%13 = bitcast i8* %12 to %struct.TB*
	ret %struct.TB* %13
}
define void @M4_Main_main (%struct.TMain* %self) {
	; Prologue - save parameters
	%1 = alloca %struct.TMain*
	store %struct.TMain* %self, %struct.TMain** %1

	%2 = alloca %struct.TA*
	%3 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RB* @RB to %struct.__lcpl_rtti*))
	%4 = bitcast i8* %3 to %struct.TB*
	%5 = bitcast %struct.TB* %4 to i8*
	%6 = call i8* @__lcpl_cast(i8* %5, %struct.__lcpl_rtti* bitcast (%struct.RA* @RA to %struct.__lcpl_rtti*))
	%7 = bitcast i8* %6 to %struct.TA*
	store %struct.TA* %7, %struct.TA** %2
	%8 = load %struct.TA** %2
	%9 = bitcast %struct.TA* %8 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %9)
	%10 = getelementptr %struct.TA* %8, i32 0, i32 0   ; Locate address of RTTI pointer
	%11 = load %struct.__lcpl_rtti** %10         ; Load RTTI pointer
	%12 = getelementptr %struct.__lcpl_rtti* %11, i32 0, i32 3, i32 6
	%13 = load i8** %12
	%14 = bitcast i8* %13 to %struct.TA* (%struct.TA*)*  ; Convert char * into function pointer
	%15 = call %struct.TA* %14(%struct.TA* %8)

	%16 = bitcast %struct.TA* %15 to i8*
	%17 = call i8* @__lcpl_cast(i8* %16, %struct.__lcpl_rtti* bitcast (%struct.RB* @RB to %struct.__lcpl_rtti*))
	%18 = bitcast i8* %17 to %struct.TB*
	%19 = bitcast %struct.TB* %18 to i8*         ; Null ptr check
	call void @__lcpl_checkNull(i8* %19)
	%20 = getelementptr %struct.TB* %18, i32 0, i32 0   ; Locate address of RTTI pointer
	%21 = load %struct.__lcpl_rtti** %20         ; Load RTTI pointer
	%22 = getelementptr %struct.__lcpl_rtti* %21, i32 0, i32 3, i32 7
	%23 = load i8** %22
	%24 = bitcast i8* %23 to %struct.TB* (%struct.TB*)*  ; Convert char * into function pointer
	%25 = call %struct.TB* %24(%struct.TB* %18)

	ret void
}
define void @startup() {
	%1 = call i8* @__lcpl_new(%struct.__lcpl_rtti* bitcast (%struct.RMain* @RMain to %struct.__lcpl_rtti*))
	%2 = bitcast i8* %1 to %struct.TMain*                       ; Convert char * into destination type
	; Dispatch to main method
	%3 = bitcast %struct.TMain* %2 to i8*
	call void @__lcpl_checkNull(i8* %3)
	%4 = getelementptr %struct.TMain* %2, i32 0, i32 0
	%5 = load %struct.__lcpl_rtti** %4
	%6 = getelementptr %struct.__lcpl_rtti* %5, i32 0, i32 3
	%7 = bitcast [0 x i8*]* %6 to i8**
	%8 = getelementptr i8** %7, i32 4
	%9 = load i8** %8
	%10 = bitcast i8* %9 to void (%struct.TMain*)*
	call void %10(%struct.TMain* %2)
	ret void
}
