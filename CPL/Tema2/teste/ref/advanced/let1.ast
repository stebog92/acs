!!ro.pub.cs.lcpl.Program
classes:
- features:
  - !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.LocalDefinition
        init: null
        lineNumber: 6
        name: v
        scope: !!ro.pub.cs.lcpl.LocalDefinition
          init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 7, type: null, value: 10}
          lineNumber: 7
          name: a
          scope: !!ro.pub.cs.lcpl.LocalDefinition
            init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 8, type: null, value: 20}
            lineNumber: 8
            name: b
            scope: !!ro.pub.cs.lcpl.Block
              expressions:
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Addition
                  e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 10, name: a, type: null}
                  e2: !!ro.pub.cs.lcpl.Multiplication
                    e1: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 10, type: null,
                      value: 2}
                    e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 10, name: b, type: null}
                    lineNumber: 10
                    type: null
                  lineNumber: 10
                  type: null
                lineNumber: 10
                symbol: v
                type: null
              - !!ro.pub.cs.lcpl.LocalDefinition
                init: null
                lineNumber: 12
                name: v2
                scope: !!ro.pub.cs.lcpl.LocalDefinition
                  init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 13, type: null,
                    value: 50}
                  lineNumber: 13
                  name: a
                  scope: !!ro.pub.cs.lcpl.LocalDefinition
                    init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 14, type: null,
                      value: 30}
                    lineNumber: 14
                    name: c
                    scope: !!ro.pub.cs.lcpl.Block
                      expressions:
                      - !!ro.pub.cs.lcpl.Assignment
                        e1: !!ro.pub.cs.lcpl.Addition
                          e1: !!ro.pub.cs.lcpl.Addition
                            e1: !!ro.pub.cs.lcpl.Addition
                              e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 16, name: v,
                                type: null}
                              e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 16, name: a,
                                type: null}
                              lineNumber: 16
                              type: null
                            e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 16, name: b,
                              type: null}
                            lineNumber: 16
                            type: null
                          e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 16, name: c, type: null}
                          lineNumber: 16
                          type: null
                        lineNumber: 16
                        symbol: v
                        type: null
                      - !!ro.pub.cs.lcpl.LocalDefinition
                        init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 18, type: null,
                          value: 20}
                        lineNumber: 18
                        name: x
                        scope: !!ro.pub.cs.lcpl.Block
                          expressions:
                          - !!ro.pub.cs.lcpl.Assignment
                            e1: !!ro.pub.cs.lcpl.Assignment
                              e1: !!ro.pub.cs.lcpl.Subtraction
                                e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 21, name: v,
                                  type: null}
                                e2: !!ro.pub.cs.lcpl.Multiplication
                                  e1: !!ro.pub.cs.lcpl.Multiplication
                                    e1: !!ro.pub.cs.lcpl.Multiplication
                                      e1: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 21,
                                        type: null, value: 3}
                                      e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 21,
                                        name: b, type: null}
                                      lineNumber: 21
                                      type: null
                                    e2: !!ro.pub.cs.lcpl.Multiplication
                                      e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 21,
                                        name: x, type: null}
                                      e2: !!ro.pub.cs.lcpl.IfStatement
                                        condition: !!ro.pub.cs.lcpl.LessThan
                                          e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 21,
                                            name: b, type: null}
                                          e2: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 21,
                                            type: null, value: 30}
                                          lineNumber: 21
                                          type: null
                                        ifExpr: !!ro.pub.cs.lcpl.Block
                                          expressions:
                                          - !!ro.pub.cs.lcpl.LocalDefinition
                                            init: !!ro.pub.cs.lcpl.IntConstant {lineNumber: 22,
                                              type: null, value: 100}
                                            lineNumber: 22
                                            name: b
                                            scope: !!ro.pub.cs.lcpl.Block
                                              expressions:
                                              - !!ro.pub.cs.lcpl.Multiplication
                                                e1: !!ro.pub.cs.lcpl.Symbol {lineNumber: 23,
                                                  name: a, type: null}
                                                e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 23,
                                                  name: b, type: null}
                                                lineNumber: 23
                                                type: null
                                              lineNumber: 23
                                              type: null
                                            type: Int
                                          lineNumber: 22
                                          type: null
                                        lineNumber: 21
                                        thenExpr: !!ro.pub.cs.lcpl.Block
                                          expressions:
                                          - !!ro.pub.cs.lcpl.IntConstant {lineNumber: 24,
                                            type: null, value: 0}
                                          lineNumber: 24
                                          type: null
                                        type: null
                                      lineNumber: 21
                                      type: null
                                    lineNumber: 21
                                    type: null
                                  e2: !!ro.pub.cs.lcpl.Symbol {lineNumber: 25, name: c,
                                    type: null}
                                  lineNumber: 25
                                  type: null
                                lineNumber: 21
                                type: null
                              lineNumber: 21
                              symbol: v
                              type: null
                            lineNumber: 20
                            symbol: v2
                            type: null
                          - !!ro.pub.cs.lcpl.Dispatch
                            arguments:
                            - !!ro.pub.cs.lcpl.Symbol {lineNumber: 26, name: v, type: null}
                            lineNumber: 26
                            name: out
                            object: !!ro.pub.cs.lcpl.NewObject {lineNumber: 26, type: IO}
                            type: null
                          lineNumber: 20
                          type: null
                        type: Int
                      lineNumber: 16
                      type: null
                    type: Int
                  type: Int
                type: Int
              lineNumber: 10
              type: null
            type: Int
          type: Int
        type: Int
      lineNumber: 5
      type: null
    lineNumber: 4
    name: main
    parameters: []
    returnType: void
  lineNumber: 3
  name: Main
  parent: null
lineNumber: 3

