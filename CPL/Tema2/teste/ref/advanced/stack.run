!!ro.pub.cs.lcpl.Program
classes:
- &id004
  features:
  - &id011 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.IntConstant
        lineNumber: 2
        type: Int
        typeData: &id001 !!ro.pub.cs.lcpl.IntType {}
        value: 0
      lineNumber: 2
      type: Int
      typeData: *id001
    lineNumber: 2
    name: matches
    parameters:
    - lineNumber: 2
      name: o
      type: Object
      variableType: &id002 !!ro.pub.cs.lcpl.LCPLClass
        features:
        - !!ro.pub.cs.lcpl.Method
          body: null
          lineNumber: 0
          name: abort
          parameters: []
          parent: *id002
          returnType: void
          returnTypeData: &id024 !!ro.pub.cs.lcpl.NoType {}
          self:
            lineNumber: 0
            name: self
            type: Object
            variableType: *id002
        - !!ro.pub.cs.lcpl.Method
          body: null
          lineNumber: 0
          name: typeName
          parameters: []
          parent: *id002
          returnType: String
          returnTypeData: &id003 !!ro.pub.cs.lcpl.LCPLClass
            features:
            - !!ro.pub.cs.lcpl.Method
              body: null
              lineNumber: 0
              name: length
              parameters: []
              parent: *id003
              returnType: Int
              returnTypeData: *id001
              self:
                lineNumber: 0
                name: self
                type: String
                variableType: *id003
            - !!ro.pub.cs.lcpl.Method
              body: null
              lineNumber: 0
              name: toInt
              parameters: []
              parent: *id003
              returnType: Int
              returnTypeData: *id001
              self:
                lineNumber: 0
                name: self
                type: String
                variableType: *id003
            lineNumber: 0
            name: String
            parent: Object
            parentData: *id002
          self:
            lineNumber: 0
            name: self
            type: Object
            variableType: *id002
        - !!ro.pub.cs.lcpl.Method
          body: null
          lineNumber: 0
          name: copy
          parameters: []
          parent: *id002
          returnType: Object
          returnTypeData: *id002
          self:
            lineNumber: 0
            name: self
            type: Object
            variableType: *id002
        lineNumber: 0
        name: Object
        parent: null
        parentData: null
    parent: *id004
    returnType: Int
    returnTypeData: *id001
    self:
      lineNumber: 0
      name: self
      type: Query
      variableType: *id004
  lineNumber: 1
  name: Query
  parent: Object
  parentData: *id002
- &id005
  features:
  - &id006 !!ro.pub.cs.lcpl.Attribute
    attrInitSelf: null
    init: null
    lineNumber: 7
    name: o
    type: Object
    typeData: *id002
  - &id007 !!ro.pub.cs.lcpl.Attribute
    attrInitSelf: null
    init: null
    lineNumber: 8
    name: rest
    type: Item
    typeData: *id005
  - &id022 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Assignment
        e1: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 11
          name: o
          type: Object
          typeData: *id002
          variable: &id008 !!ro.pub.cs.lcpl.FormalParam
            lineNumber: 10
            name: o
            type: Object
            variableType: *id002
        lineNumber: 11
        symbol: o
        symbolData: *id006
        type: Object
        typeData: *id002
      - !!ro.pub.cs.lcpl.Assignment
        e1: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 12
          name: rest
          type: Item
          typeData: *id005
          variable: &id009 !!ro.pub.cs.lcpl.FormalParam
            lineNumber: 10
            name: rest
            type: Item
            variableType: *id005
        lineNumber: 12
        symbol: rest
        symbolData: *id007
        type: Item
        typeData: *id005
      - !!ro.pub.cs.lcpl.Symbol
        lineNumber: 13
        name: self
        type: Item
        typeData: *id005
        variable: &id010 !!ro.pub.cs.lcpl.FormalParam
          lineNumber: 0
          name: self
          type: Item
          variableType: *id005
      lineNumber: 11
      type: Item
      typeData: *id005
    lineNumber: 10
    name: init
    parameters:
    - *id008
    - *id009
    parent: *id005
    returnType: Item
    returnTypeData: *id005
    self: *id010
  - &id027 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Symbol
        lineNumber: 15
        name: rest
        type: Item
        typeData: *id005
        variable: *id007
      lineNumber: 15
      type: Item
      typeData: *id005
    lineNumber: 15
    name: rest
    parameters: []
    parent: *id005
    returnType: Item
    returnTypeData: *id005
    self:
      lineNumber: 0
      name: self
      type: Item
      variableType: *id005
  - &id026 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Symbol
        lineNumber: 16
        name: o
        type: Object
        typeData: *id002
        variable: *id006
      lineNumber: 16
      type: Object
      typeData: *id002
    lineNumber: 16
    name: val
    parameters: []
    parent: *id005
    returnType: Object
    returnTypeData: *id002
    self:
      lineNumber: 0
      name: self
      type: Item
      variableType: *id005
  - &id013 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.IfStatement
        condition: !!ro.pub.cs.lcpl.Dispatch
          arguments:
          - !!ro.pub.cs.lcpl.Symbol
            lineNumber: 19
            name: o
            type: Object
            typeData: *id002
            variable: *id006
          lineNumber: 19
          method: *id011
          name: matches
          object: !!ro.pub.cs.lcpl.Symbol
            lineNumber: 19
            name: q
            type: Query
            typeData: *id004
            variable: &id012 !!ro.pub.cs.lcpl.FormalParam
              lineNumber: 18
              name: q
              type: Query
              variableType: *id004
          type: Int
          typeData: *id001
        ifExpr: !!ro.pub.cs.lcpl.Block
          expressions:
          - !!ro.pub.cs.lcpl.IntConstant
            lineNumber: 19
            type: Int
            typeData: *id001
            value: 1
          lineNumber: 19
          type: Int
          typeData: *id001
        lineNumber: 19
        thenExpr: !!ro.pub.cs.lcpl.Block
          expressions:
          - !!ro.pub.cs.lcpl.IfStatement
            condition: !!ro.pub.cs.lcpl.EqualComparison
              e1: !!ro.pub.cs.lcpl.Cast
                e1: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 19
                  name: rest
                  type: Item
                  typeData: *id005
                  variable: *id007
                lineNumber: 19
                type: Object
                typeData: *id002
              e2: !!ro.pub.cs.lcpl.VoidConstant
                lineNumber: 19
                type: void
                typeData: &id020 !!ro.pub.cs.lcpl.NullType {}
              lineNumber: 19
              type: Int
              typeData: *id001
            ifExpr: !!ro.pub.cs.lcpl.Block
              expressions:
              - !!ro.pub.cs.lcpl.IntConstant
                lineNumber: 19
                type: Int
                typeData: *id001
                value: 0
              lineNumber: 19
              type: Int
              typeData: *id001
            lineNumber: 19
            thenExpr: !!ro.pub.cs.lcpl.Block
              expressions:
              - !!ro.pub.cs.lcpl.Dispatch
                arguments:
                - !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 19
                  name: q
                  type: Query
                  typeData: *id004
                  variable: *id012
                lineNumber: 19
                method: *id013
                name: find
                object: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 19
                  name: rest
                  type: Item
                  typeData: *id005
                  variable: *id007
                type: Int
                typeData: *id001
              lineNumber: 19
              type: Int
              typeData: *id001
            type: Int
            typeData: *id001
          lineNumber: 19
          type: Int
          typeData: *id001
        type: Int
        typeData: *id001
      lineNumber: 19
      type: Int
      typeData: *id001
    lineNumber: 18
    name: find
    parameters:
    - *id012
    parent: *id005
    returnType: Int
    returnTypeData: *id001
    self:
      lineNumber: 0
      name: self
      type: Item
      variableType: *id005
  lineNumber: 5
  name: Item
  parent: Object
  parentData: *id002
- &id015
  features:
  - &id014 !!ro.pub.cs.lcpl.Attribute
    attrInitSelf: null
    init: null
    lineNumber: 25
    name: target
    type: Object
    typeData: *id002
  - &id030 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Assignment
        e1: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 26
          name: target
          type: Object
          typeData: *id002
          variable: &id016 !!ro.pub.cs.lcpl.FormalParam
            lineNumber: 26
            name: target
            type: Object
            variableType: *id002
        lineNumber: 26
        symbol: target
        symbolData: *id014
        type: Object
        typeData: *id002
      - !!ro.pub.cs.lcpl.Symbol
        lineNumber: 26
        name: self
        type: HasObject
        typeData: *id015
        variable: &id017 !!ro.pub.cs.lcpl.FormalParam
          lineNumber: 0
          name: self
          type: HasObject
          variableType: *id015
      lineNumber: 26
      type: HasObject
      typeData: *id015
    lineNumber: 26
    name: init
    parameters:
    - *id016
    parent: *id015
    returnType: HasObject
    returnTypeData: *id015
    self: *id017
  - !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.EqualComparison
        e1: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 27
          name: o
          type: Object
          typeData: *id002
          variable: &id018 !!ro.pub.cs.lcpl.FormalParam
            lineNumber: 27
            name: o
            type: Object
            variableType: *id002
        e2: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 27
          name: target
          type: Object
          typeData: *id002
          variable: *id014
        lineNumber: 27
        type: Int
        typeData: *id001
      lineNumber: 27
      type: Int
      typeData: *id001
    lineNumber: 27
    name: matches
    parameters:
    - *id018
    parent: *id015
    returnType: Int
    returnTypeData: *id001
    self:
      lineNumber: 0
      name: self
      type: HasObject
      variableType: *id015
  lineNumber: 24
  name: HasObject
  parent: Query
  parentData: *id004
- &id021
  features:
  - &id019 !!ro.pub.cs.lcpl.Attribute
    attrInitSelf: null
    init: null
    lineNumber: 32
    name: i
    type: Item
    typeData: *id005
  - &id025 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.EqualComparison
        e1: !!ro.pub.cs.lcpl.Cast
          e1: !!ro.pub.cs.lcpl.Symbol
            lineNumber: 35
            name: i
            type: Item
            typeData: *id005
            variable: *id019
          lineNumber: 35
          type: Object
          typeData: *id002
        e2: !!ro.pub.cs.lcpl.VoidConstant
          lineNumber: 35
          type: void
          typeData: *id020
        lineNumber: 35
        type: Int
        typeData: *id001
      lineNumber: 35
      type: Int
      typeData: *id001
    lineNumber: 35
    name: isEmpty
    parameters: []
    parent: *id021
    returnType: Int
    returnTypeData: *id001
    self:
      lineNumber: 0
      name: self
      type: Stack
      variableType: *id021
  - &id042 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Assignment
        e1: !!ro.pub.cs.lcpl.Dispatch
          arguments:
          - !!ro.pub.cs.lcpl.Symbol
            lineNumber: 38
            name: o
            type: Object
            typeData: *id002
            variable: &id023 !!ro.pub.cs.lcpl.FormalParam
              lineNumber: 37
              name: o
              type: Object
              variableType: *id002
          - !!ro.pub.cs.lcpl.Symbol
            lineNumber: 38
            name: i
            type: Item
            typeData: *id005
            variable: *id019
          lineNumber: 38
          method: *id022
          name: init
          object: !!ro.pub.cs.lcpl.NewObject
            lineNumber: 38
            type: Item
            typeData: *id005
          type: Item
          typeData: *id005
        lineNumber: 38
        symbol: i
        symbolData: *id019
        type: Item
        typeData: *id005
      lineNumber: 38
      type: Item
      typeData: *id005
    lineNumber: 37
    name: push
    parameters:
    - *id023
    parent: *id021
    returnType: void
    returnTypeData: *id024
    self:
      lineNumber: 0
      name: self
      type: Stack
      variableType: *id021
  - &id045 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.IfStatement
        condition: !!ro.pub.cs.lcpl.Dispatch
          arguments: []
          lineNumber: 42
          method: *id025
          name: isEmpty
          object: !!ro.pub.cs.lcpl.Symbol
            lineNumber: 41
            name: self
            type: Stack
            typeData: *id021
            variable: &id029 !!ro.pub.cs.lcpl.FormalParam
              lineNumber: 0
              name: self
              type: Stack
              variableType: *id021
          type: Int
          typeData: *id001
        ifExpr: !!ro.pub.cs.lcpl.Block
          expressions:
          - !!ro.pub.cs.lcpl.VoidConstant
            lineNumber: 42
            type: void
            typeData: *id020
          lineNumber: 42
          type: void
          typeData: *id020
        lineNumber: 42
        thenExpr: !!ro.pub.cs.lcpl.Block
          expressions:
          - &id028 !!ro.pub.cs.lcpl.LocalDefinition
            init: !!ro.pub.cs.lcpl.Dispatch
              arguments: []
              lineNumber: 44
              method: *id026
              name: val
              object: !!ro.pub.cs.lcpl.Symbol
                lineNumber: 44
                name: i
                type: Item
                typeData: *id005
                variable: *id019
              type: Object
              typeData: *id002
            lineNumber: 44
            name: o
            scope: !!ro.pub.cs.lcpl.Block
              expressions:
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments: []
                  lineNumber: 45
                  method: *id027
                  name: rest
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 45
                    name: i
                    type: Item
                    typeData: *id005
                    variable: *id019
                  type: Item
                  typeData: *id005
                lineNumber: 45
                symbol: i
                symbolData: *id019
                type: Item
                typeData: *id005
              - !!ro.pub.cs.lcpl.Symbol
                lineNumber: 46
                name: o
                type: Object
                typeData: *id002
                variable: *id028
              lineNumber: 45
              type: Object
              typeData: *id002
            type: Object
            typeData: *id002
            variableType: *id002
          lineNumber: 44
          type: Object
          typeData: *id002
        type: Object
        typeData: *id002
      lineNumber: 42
      type: Object
      typeData: *id002
    lineNumber: 41
    name: pop
    parameters: []
    parent: *id021
    returnType: Object
    returnTypeData: *id002
    self: *id029
  - &id058 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Dispatch
        arguments:
        - !!ro.pub.cs.lcpl.Cast
          e1: !!ro.pub.cs.lcpl.Dispatch
            arguments:
            - !!ro.pub.cs.lcpl.Symbol
              lineNumber: 50
              name: o
              type: Object
              typeData: *id002
              variable: &id033 !!ro.pub.cs.lcpl.FormalParam
                lineNumber: 50
                name: o
                type: Object
                variableType: *id002
            lineNumber: 50
            method: *id030
            name: init
            object: !!ro.pub.cs.lcpl.NewObject
              lineNumber: 50
              type: HasObject
              typeData: *id015
            type: HasObject
            typeData: *id015
          lineNumber: 50
          type: Query
          typeData: *id004
        lineNumber: 50
        method: &id035
          body: !!ro.pub.cs.lcpl.Block
            expressions:
            - !!ro.pub.cs.lcpl.IfStatement
              condition: !!ro.pub.cs.lcpl.Dispatch
                arguments: []
                lineNumber: 51
                method: *id025
                name: isEmpty
                object: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 51
                  name: self
                  type: Stack
                  typeData: *id021
                  variable: &id032 !!ro.pub.cs.lcpl.FormalParam
                    lineNumber: 0
                    name: self
                    type: Stack
                    variableType: *id021
                type: Int
                typeData: *id001
              ifExpr: !!ro.pub.cs.lcpl.Block
                expressions:
                - !!ro.pub.cs.lcpl.IntConstant
                  lineNumber: 51
                  type: Int
                  typeData: *id001
                  value: 0
                lineNumber: 51
                type: Int
                typeData: *id001
              lineNumber: 51
              thenExpr: !!ro.pub.cs.lcpl.Block
                expressions:
                - !!ro.pub.cs.lcpl.Dispatch
                  arguments:
                  - !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 51
                    name: q
                    type: Query
                    typeData: *id004
                    variable: &id031 !!ro.pub.cs.lcpl.FormalParam
                      lineNumber: 51
                      name: q
                      type: Query
                      variableType: *id004
                  lineNumber: 51
                  method: *id013
                  name: find
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 51
                    name: i
                    type: Item
                    typeData: *id005
                    variable: *id019
                  type: Int
                  typeData: *id001
                lineNumber: 51
                type: Int
                typeData: *id001
              type: Int
              typeData: *id001
            lineNumber: 51
            type: Int
            typeData: *id001
          lineNumber: 51
          name: find
          parameters:
          - *id031
          parent: *id021
          returnType: Int
          returnTypeData: *id001
          self: *id032
        name: find
        object: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 50
          name: self
          type: Stack
          typeData: *id021
          variable: &id034 !!ro.pub.cs.lcpl.FormalParam
            lineNumber: 0
            name: self
            type: Stack
            variableType: *id021
        type: Int
        typeData: *id001
      lineNumber: 50
      type: Int
      typeData: *id001
    lineNumber: 50
    name: has
    parameters:
    - *id033
    parent: *id021
    returnType: Int
    returnTypeData: *id001
    self: *id034
  - *id035
  lineNumber: 30
  name: Stack
  parent: Object
  parentData: *id002
- &id037
  features:
  - &id036 !!ro.pub.cs.lcpl.Attribute
    attrInitSelf: null
    init: null
    lineNumber: 55
    name: target
    type: String
    typeData: *id003
  - &id047 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Assignment
        e1: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 56
          name: target
          type: String
          typeData: *id003
          variable: &id038 !!ro.pub.cs.lcpl.FormalParam
            lineNumber: 56
            name: target
            type: String
            variableType: *id003
        lineNumber: 56
        symbol: target
        symbolData: *id036
        type: String
        typeData: *id003
      - !!ro.pub.cs.lcpl.Symbol
        lineNumber: 56
        name: self
        type: HasString
        typeData: *id037
        variable: &id039 !!ro.pub.cs.lcpl.FormalParam
          lineNumber: 0
          name: self
          type: HasString
          variableType: *id037
      lineNumber: 56
      type: HasString
      typeData: *id037
    lineNumber: 56
    name: init
    parameters:
    - *id038
    parent: *id037
    returnType: HasString
    returnTypeData: *id037
    self: *id039
  - !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.EqualComparison
        e1: !!ro.pub.cs.lcpl.Cast
          e1: !!ro.pub.cs.lcpl.Symbol
            lineNumber: 57
            name: o
            type: Object
            typeData: *id002
            variable: &id040 !!ro.pub.cs.lcpl.FormalParam
              lineNumber: 57
              name: o
              type: Object
              variableType: *id002
          lineNumber: 57
          type: String
          typeData: *id003
        e2: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 57
          name: target
          type: String
          typeData: *id003
          variable: *id036
        lineNumber: 57
        type: Int
        typeData: *id001
      lineNumber: 57
      type: Int
      typeData: *id001
    lineNumber: 57
    name: matches
    parameters:
    - *id040
    parent: *id037
    returnType: Int
    returnTypeData: *id001
    self:
      lineNumber: 0
      name: self
      type: HasString
      variableType: *id037
  lineNumber: 54
  name: HasString
  parent: Query
  parentData: *id004
- &id041
  features:
  - &id043 !!ro.pub.cs.lcpl.Attribute
    attrInitSelf:
      lineNumber: 0
      name: self
      type: Stack
      variableType: *id041
    init: !!ro.pub.cs.lcpl.NewObject
      lineNumber: 61
      type: Stack
      typeData: *id021
    lineNumber: 61
    name: stk
    type: Stack
    typeData: *id021
  - &id062 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Dispatch
        arguments:
        - !!ro.pub.cs.lcpl.Cast
          e1: !!ro.pub.cs.lcpl.Symbol
            lineNumber: 65
            name: s
            type: String
            typeData: *id003
            variable: &id044 !!ro.pub.cs.lcpl.FormalParam
              lineNumber: 64
              name: s
              type: String
              variableType: *id003
          lineNumber: 65
          type: Object
          typeData: *id002
        lineNumber: 65
        method: *id042
        name: push
        object: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 65
          name: stk
          type: Stack
          typeData: *id021
          variable: *id043
        type: (none)
        typeData: *id024
      lineNumber: 65
      type: (none)
      typeData: *id024
    lineNumber: 64
    name: push
    parameters:
    - *id044
    parent: *id041
    returnType: void
    returnTypeData: *id024
    self:
      lineNumber: 0
      name: self
      type: StringStack
      variableType: *id041
  - &id063 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - &id046 !!ro.pub.cs.lcpl.LocalDefinition
        init: !!ro.pub.cs.lcpl.Cast
          e1: !!ro.pub.cs.lcpl.Dispatch
            arguments: []
            lineNumber: 69
            method: *id045
            name: pop
            object: !!ro.pub.cs.lcpl.Symbol
              lineNumber: 69
              name: stk
              type: Stack
              typeData: *id021
              variable: *id043
            type: Object
            typeData: *id002
          lineNumber: 69
          type: String
          typeData: *id003
        lineNumber: 69
        name: s
        scope: !!ro.pub.cs.lcpl.Block
          expressions:
          - !!ro.pub.cs.lcpl.IfStatement
            condition: !!ro.pub.cs.lcpl.EqualComparison
              e1: !!ro.pub.cs.lcpl.Cast
                e1: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 70
                  name: s
                  type: String
                  typeData: *id003
                  variable: *id046
                lineNumber: 70
                type: Object
                typeData: *id002
              e2: !!ro.pub.cs.lcpl.VoidConstant
                lineNumber: 70
                type: void
                typeData: *id020
              lineNumber: 70
              type: Int
              typeData: *id001
            ifExpr: !!ro.pub.cs.lcpl.Block
              expressions:
              - !!ro.pub.cs.lcpl.StringConstant
                lineNumber: 70
                type: String
                typeData: *id003
                value: ''
              lineNumber: 70
              type: String
              typeData: *id003
            lineNumber: 70
            thenExpr: !!ro.pub.cs.lcpl.Block
              expressions:
              - !!ro.pub.cs.lcpl.Cast
                e1: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 70
                  name: s
                  type: String
                  typeData: *id003
                  variable: *id046
                lineNumber: 70
                type: String
                typeData: *id003
              lineNumber: 70
              type: String
              typeData: *id003
            type: String
            typeData: *id003
          lineNumber: 70
          type: String
          typeData: *id003
        type: String
        typeData: *id003
        variableType: *id003
      lineNumber: 69
      type: String
      typeData: *id003
    lineNumber: 68
    name: pop
    parameters: []
    parent: *id041
    returnType: String
    returnTypeData: *id003
    self:
      lineNumber: 0
      name: self
      type: StringStack
      variableType: *id041
  - &id060 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Dispatch
        arguments:
        - !!ro.pub.cs.lcpl.Cast
          e1: !!ro.pub.cs.lcpl.Dispatch
            arguments:
            - !!ro.pub.cs.lcpl.Symbol
              lineNumber: 73
              name: s
              type: String
              typeData: *id003
              variable: &id048 !!ro.pub.cs.lcpl.FormalParam
                lineNumber: 73
                name: s
                type: String
                variableType: *id003
            lineNumber: 73
            method: *id047
            name: init
            object: !!ro.pub.cs.lcpl.NewObject
              lineNumber: 73
              type: HasString
              typeData: *id037
            type: HasString
            typeData: *id037
          lineNumber: 73
          type: Query
          typeData: *id004
        lineNumber: 73
        method: *id035
        name: find
        object: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 73
          name: stk
          type: Stack
          typeData: *id021
          variable: *id043
        type: Int
        typeData: *id001
      lineNumber: 73
      type: Int
      typeData: *id001
    lineNumber: 73
    name: has
    parameters:
    - *id048
    parent: *id041
    returnType: Int
    returnTypeData: *id001
    self:
      lineNumber: 0
      name: self
      type: StringStack
      variableType: *id041
  lineNumber: 60
  name: StringStack
  parent: Object
  parentData: *id002
- &id054
  features:
  - &id049 !!ro.pub.cs.lcpl.Attribute
    attrInitSelf: null
    init: null
    lineNumber: 77
    name: a
    type: Int
    typeData: *id001
  - &id050 !!ro.pub.cs.lcpl.Attribute
    attrInitSelf: null
    init: null
    lineNumber: 77
    name: b
    type: Int
    typeData: *id001
  - &id051 !!ro.pub.cs.lcpl.Attribute
    attrInitSelf: null
    init: null
    lineNumber: 77
    name: c
    type: Int
    typeData: *id001
  - &id056 !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Dispatch
        arguments:
        - !!ro.pub.cs.lcpl.Addition
          e1: !!ro.pub.cs.lcpl.Addition
            e1: !!ro.pub.cs.lcpl.Addition
              e1: !!ro.pub.cs.lcpl.Addition
                e1: !!ro.pub.cs.lcpl.Addition
                  e1: !!ro.pub.cs.lcpl.Cast
                    e1: !!ro.pub.cs.lcpl.Symbol
                      lineNumber: 78
                      name: a
                      type: Int
                      typeData: *id001
                      variable: *id049
                    lineNumber: 78
                    type: String
                    typeData: *id003
                  e2: !!ro.pub.cs.lcpl.StringConstant
                    lineNumber: 78
                    type: String
                    typeData: *id003
                    value: ' '
                  lineNumber: 78
                  type: String
                  typeData: *id003
                e2: !!ro.pub.cs.lcpl.Cast
                  e1: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 78
                    name: b
                    type: Int
                    typeData: *id001
                    variable: *id050
                  lineNumber: 78
                  type: String
                  typeData: *id003
                lineNumber: 78
                type: String
                typeData: *id003
              e2: !!ro.pub.cs.lcpl.StringConstant
                lineNumber: 78
                type: String
                typeData: *id003
                value: ' '
              lineNumber: 78
              type: String
              typeData: *id003
            e2: !!ro.pub.cs.lcpl.Cast
              e1: !!ro.pub.cs.lcpl.Symbol
                lineNumber: 78
                name: c
                type: Int
                typeData: *id001
                variable: *id051
              lineNumber: 78
              type: String
              typeData: *id003
            lineNumber: 78
            type: String
            typeData: *id003
          e2: !!ro.pub.cs.lcpl.StringConstant
            lineNumber: 78
            type: String
            typeData: *id003
            value: |2+

          lineNumber: 78
          type: String
          typeData: *id003
        lineNumber: 78
        method: &id052
          body: null
          lineNumber: 0
          name: out
          parameters:
          - lineNumber: 0
            name: msg
            type: String
            variableType: *id003
          parent: &id053
            features:
            - *id052
            - !!ro.pub.cs.lcpl.Method
              body: null
              lineNumber: 0
              name: in
              parameters: []
              parent: *id053
              returnType: String
              returnTypeData: *id003
              self:
                lineNumber: 0
                name: self
                type: IO
                variableType: *id053
            lineNumber: 0
            name: IO
            parent: Object
            parentData: *id002
          returnType: IO
          returnTypeData: *id053
          self:
            lineNumber: 0
            name: self
            type: IO
            variableType: *id053
        name: out
        object: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 78
          name: self
          type: Main
          typeData: *id054
          variable: &id055 !!ro.pub.cs.lcpl.FormalParam
            lineNumber: 0
            name: self
            type: Main
            variableType: *id054
        type: IO
        typeData: *id053
      lineNumber: 78
      type: IO
      typeData: *id053
    lineNumber: 78
    name: print
    parameters: []
    parent: *id054
    returnType: void
    returnTypeData: *id024
    self: *id055
  - !!ro.pub.cs.lcpl.Method
    body: !!ro.pub.cs.lcpl.Block
      expressions:
      - !!ro.pub.cs.lcpl.Assignment
        e1: !!ro.pub.cs.lcpl.Assignment
          e1: !!ro.pub.cs.lcpl.Assignment
            e1: !!ro.pub.cs.lcpl.UnaryMinus
              e1: !!ro.pub.cs.lcpl.IntConstant
                lineNumber: 80
                type: Int
                typeData: *id001
                value: 1
              lineNumber: 80
              type: Int
              typeData: *id001
            lineNumber: 80
            symbol: c
            symbolData: *id051
            type: Int
            typeData: *id001
          lineNumber: 80
          symbol: b
          symbolData: *id050
          type: Int
          typeData: *id001
        lineNumber: 80
        symbol: a
        symbolData: *id049
        type: Int
        typeData: *id001
      - !!ro.pub.cs.lcpl.Dispatch
        arguments: []
        lineNumber: 81
        method: *id056
        name: print
        object: !!ro.pub.cs.lcpl.Symbol
          lineNumber: 79
          name: self
          type: Main
          typeData: *id054
          variable: &id061 !!ro.pub.cs.lcpl.FormalParam
            lineNumber: 0
            name: self
            type: Main
            variableType: *id054
        type: (none)
        typeData: *id024
      - &id059 !!ro.pub.cs.lcpl.LocalDefinition
        init: !!ro.pub.cs.lcpl.NewObject
          lineNumber: 83
          type: Stack
          typeData: *id021
        lineNumber: 83
        name: s
        scope: &id057 !!ro.pub.cs.lcpl.LocalDefinition
          init: !!ro.pub.cs.lcpl.NewObject
            lineNumber: 83
            type: StringStack
            typeData: *id041
          lineNumber: 83
          name: ss
          scope: !!ro.pub.cs.lcpl.LocalDefinition
            init: !!ro.pub.cs.lcpl.StringConstant
              lineNumber: 83
              type: String
              typeData: *id003
              value: Hello
            lineNumber: 83
            name: h
            scope: !!ro.pub.cs.lcpl.Block
              expressions:
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments:
                  - !!ro.pub.cs.lcpl.Cast
                    e1: !!ro.pub.cs.lcpl.Symbol
                      lineNumber: 84
                      name: ss
                      type: StringStack
                      typeData: *id041
                      variable: *id057
                    lineNumber: 84
                    type: Object
                    typeData: *id002
                  lineNumber: 84
                  method: *id058
                  name: has
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 84
                    name: s
                    type: Stack
                    typeData: *id021
                    variable: *id059
                  type: Int
                  typeData: *id001
                lineNumber: 84
                symbol: a
                symbolData: *id049
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments:
                  - !!ro.pub.cs.lcpl.StringConstant
                    lineNumber: 84
                    type: String
                    typeData: *id003
                    value: Hello
                  lineNumber: 84
                  method: *id060
                  name: has
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 84
                    name: ss
                    type: StringStack
                    typeData: *id041
                    variable: *id057
                  type: Int
                  typeData: *id001
                lineNumber: 84
                symbol: b
                symbolData: *id050
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments:
                  - !!ro.pub.cs.lcpl.StringConstant
                    lineNumber: 84
                    type: String
                    typeData: *id003
                    value: world
                  lineNumber: 84
                  method: *id060
                  name: has
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 84
                    name: ss
                    type: StringStack
                    typeData: *id041
                    variable: *id057
                  type: Int
                  typeData: *id001
                lineNumber: 84
                symbol: c
                symbolData: *id051
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Dispatch
                arguments: []
                lineNumber: 84
                method: *id056
                name: print
                object: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 79
                  name: self
                  type: Main
                  typeData: *id054
                  variable: *id061
                type: (none)
                typeData: *id024
              - !!ro.pub.cs.lcpl.Dispatch
                arguments:
                - !!ro.pub.cs.lcpl.Cast
                  e1: !!ro.pub.cs.lcpl.StringConstant
                    lineNumber: 86
                    type: String
                    typeData: *id003
                    value: '100'
                  lineNumber: 86
                  type: Object
                  typeData: *id002
                lineNumber: 86
                method: *id042
                name: push
                object: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 86
                  name: s
                  type: Stack
                  typeData: *id021
                  variable: *id059
                type: (none)
                typeData: *id024
              - !!ro.pub.cs.lcpl.Dispatch
                arguments:
                - !!ro.pub.cs.lcpl.StringConstant
                  lineNumber: 86
                  type: String
                  typeData: *id003
                  value: Hello
                lineNumber: 86
                method: *id062
                name: push
                object: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 86
                  name: ss
                  type: StringStack
                  typeData: *id041
                  variable: *id057
                type: (none)
                typeData: *id024
              - !!ro.pub.cs.lcpl.Dispatch
                arguments:
                - !!ro.pub.cs.lcpl.Cast
                  e1: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 86
                    name: ss
                    type: StringStack
                    typeData: *id041
                    variable: *id057
                  lineNumber: 86
                  type: Object
                  typeData: *id002
                lineNumber: 86
                method: *id042
                name: push
                object: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 86
                  name: s
                  type: Stack
                  typeData: *id021
                  variable: *id059
                type: (none)
                typeData: *id024
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments:
                  - !!ro.pub.cs.lcpl.Cast
                    e1: !!ro.pub.cs.lcpl.Symbol
                      lineNumber: 87
                      name: ss
                      type: StringStack
                      typeData: *id041
                      variable: *id057
                    lineNumber: 87
                    type: Object
                    typeData: *id002
                  lineNumber: 87
                  method: *id058
                  name: has
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 87
                    name: s
                    type: Stack
                    typeData: *id021
                    variable: *id059
                  type: Int
                  typeData: *id001
                lineNumber: 87
                symbol: a
                symbolData: *id049
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments:
                  - !!ro.pub.cs.lcpl.StringConstant
                    lineNumber: 87
                    type: String
                    typeData: *id003
                    value: Hello
                  lineNumber: 87
                  method: *id060
                  name: has
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 87
                    name: ss
                    type: StringStack
                    typeData: *id041
                    variable: *id057
                  type: Int
                  typeData: *id001
                lineNumber: 87
                symbol: b
                symbolData: *id050
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments:
                  - !!ro.pub.cs.lcpl.StringConstant
                    lineNumber: 87
                    type: String
                    typeData: *id003
                    value: world
                  lineNumber: 87
                  method: *id060
                  name: has
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 87
                    name: ss
                    type: StringStack
                    typeData: *id041
                    variable: *id057
                  type: Int
                  typeData: *id001
                lineNumber: 87
                symbol: c
                symbolData: *id051
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Dispatch
                arguments: []
                lineNumber: 87
                method: *id056
                name: print
                object: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 79
                  name: self
                  type: Main
                  typeData: *id054
                  variable: *id061
                type: (none)
                typeData: *id024
              - !!ro.pub.cs.lcpl.Dispatch
                arguments:
                - !!ro.pub.cs.lcpl.StringConstant
                  lineNumber: 89
                  type: String
                  typeData: *id003
                  value: world
                lineNumber: 89
                method: *id062
                name: push
                object: !!ro.pub.cs.lcpl.Cast
                  e1: !!ro.pub.cs.lcpl.Dispatch
                    arguments: []
                    lineNumber: 89
                    method: *id045
                    name: pop
                    object: !!ro.pub.cs.lcpl.Symbol
                      lineNumber: 89
                      name: s
                      type: Stack
                      typeData: *id021
                      variable: *id059
                    type: Object
                    typeData: *id002
                  lineNumber: 89
                  type: StringStack
                  typeData: *id041
                type: (none)
                typeData: *id024
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments:
                  - !!ro.pub.cs.lcpl.Cast
                    e1: !!ro.pub.cs.lcpl.Symbol
                      lineNumber: 90
                      name: ss
                      type: StringStack
                      typeData: *id041
                      variable: *id057
                    lineNumber: 90
                    type: Object
                    typeData: *id002
                  lineNumber: 90
                  method: *id058
                  name: has
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 90
                    name: s
                    type: Stack
                    typeData: *id021
                    variable: *id059
                  type: Int
                  typeData: *id001
                lineNumber: 90
                symbol: a
                symbolData: *id049
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments:
                  - !!ro.pub.cs.lcpl.StringConstant
                    lineNumber: 90
                    type: String
                    typeData: *id003
                    value: Hello
                  lineNumber: 90
                  method: *id060
                  name: has
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 90
                    name: ss
                    type: StringStack
                    typeData: *id041
                    variable: *id057
                  type: Int
                  typeData: *id001
                lineNumber: 90
                symbol: b
                symbolData: *id050
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments:
                  - !!ro.pub.cs.lcpl.StringConstant
                    lineNumber: 90
                    type: String
                    typeData: *id003
                    value: world
                  lineNumber: 90
                  method: *id060
                  name: has
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 90
                    name: ss
                    type: StringStack
                    typeData: *id041
                    variable: *id057
                  type: Int
                  typeData: *id001
                lineNumber: 90
                symbol: c
                symbolData: *id051
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Dispatch
                arguments: []
                lineNumber: 90
                method: *id056
                name: print
                object: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 79
                  name: self
                  type: Main
                  typeData: *id054
                  variable: *id061
                type: (none)
                typeData: *id024
              - !!ro.pub.cs.lcpl.Dispatch
                arguments:
                - !!ro.pub.cs.lcpl.StringConstant
                  lineNumber: 92
                  type: String
                  typeData: *id003
                  value: '20'
                lineNumber: 92
                method: *id062
                name: push
                object: !!ro.pub.cs.lcpl.Symbol
                  lineNumber: 92
                  name: ss
                  type: StringStack
                  typeData: *id041
                  variable: *id057
                type: (none)
                typeData: *id024
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.EqualComparison
                  e1: !!ro.pub.cs.lcpl.Cast
                    e1: !!ro.pub.cs.lcpl.Dispatch
                      arguments: []
                      lineNumber: 93
                      method: *id045
                      name: pop
                      object: !!ro.pub.cs.lcpl.Symbol
                        lineNumber: 93
                        name: s
                        type: Stack
                        typeData: *id021
                        variable: *id059
                      type: Object
                      typeData: *id002
                    lineNumber: 93
                    type: String
                    typeData: *id003
                  e2: !!ro.pub.cs.lcpl.Cast
                    e1: !!ro.pub.cs.lcpl.IntConstant
                      lineNumber: 93
                      type: Int
                      typeData: *id001
                      value: 100
                    lineNumber: 93
                    type: String
                    typeData: *id003
                  lineNumber: 93
                  type: Int
                  typeData: *id001
                lineNumber: 93
                symbol: a
                symbolData: *id049
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.Dispatch
                  arguments: []
                  lineNumber: 93
                  method: *id025
                  name: isEmpty
                  object: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 93
                    name: s
                    type: Stack
                    typeData: *id021
                    variable: *id059
                  type: Int
                  typeData: *id001
                lineNumber: 93
                symbol: b
                symbolData: *id050
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.Assignment
                e1: !!ro.pub.cs.lcpl.EqualComparison
                  e1: !!ro.pub.cs.lcpl.Dispatch
                    arguments: []
                    lineNumber: 93
                    method: *id063
                    name: pop
                    object: !!ro.pub.cs.lcpl.Symbol
                      lineNumber: 93
                      name: ss
                      type: StringStack
                      typeData: *id041
                      variable: *id057
                    type: String
                    typeData: *id003
                  e2: !!ro.pub.cs.lcpl.Cast
                    e1: !!ro.pub.cs.lcpl.IntConstant
                      lineNumber: 93
                      type: Int
                      typeData: *id001
                      value: 20
                    lineNumber: 93
                    type: String
                    typeData: *id003
                  lineNumber: 93
                  type: Int
                  typeData: *id001
                lineNumber: 93
                symbol: c
                symbolData: *id051
                type: Int
                typeData: *id001
              - !!ro.pub.cs.lcpl.IfStatement
                condition: !!ro.pub.cs.lcpl.Multiplication
                  e1: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 94
                    name: b
                    type: Int
                    typeData: *id001
                    variable: *id050
                  e2: !!ro.pub.cs.lcpl.Symbol
                    lineNumber: 94
                    name: c
                    type: Int
                    typeData: *id001
                    variable: *id051
                  lineNumber: 94
                  type: Int
                  typeData: *id001
                ifExpr: !!ro.pub.cs.lcpl.Block
                  expressions:
                  - !!ro.pub.cs.lcpl.Dispatch
                    arguments: []
                    lineNumber: 94
                    method: *id056
                    name: print
                    object: !!ro.pub.cs.lcpl.Symbol
                      lineNumber: 79
                      name: self
                      type: Main
                      typeData: *id054
                      variable: *id061
                    type: (none)
                    typeData: *id024
                  lineNumber: 94
                  type: (none)
                  typeData: *id024
                lineNumber: 94
                thenExpr: null
                type: (none)
                typeData: *id024
              lineNumber: 84
              type: (none)
              typeData: *id024
            type: String
            typeData: *id024
            variableType: *id003
          type: StringStack
          typeData: *id024
          variableType: *id041
        type: Stack
        typeData: *id024
        variableType: *id021
      lineNumber: 80
      type: (none)
      typeData: *id024
    lineNumber: 79
    name: main
    parameters: []
    parent: *id054
    returnType: void
    returnTypeData: *id024
    self: *id061
  lineNumber: 76
  name: Main
  parent: IO
  parentData: *id053
- *id002
- *id053
- *id003
intType: *id001
ioType: *id053
lineNumber: 1
noType: *id024
nullType: *id020
objectType: *id002
stringType: *id003

