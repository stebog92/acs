The Unix filesystem (UFS) is a filesystem used by many Unix and Unix like operating systems. 
It is also called the Berkeley Fast FileSystem, the BSD Fast FileSystem or FFS. It is a distant descendant of the original filesystem used by Version 7 Unix.

Early versions of Unix filesystems were referred to simply as FS. FS only included the boot block, superblock, a clump of inodes, and the data blocks. This worked well for the small disks early Unixes were designed for, but as technology advanced and disks grew larger, moving the head back and forth between the clump of inodes and the data blocks they referred to caused thrashing. Marshall Kirk McKusick, then a Berkeley graduate student, optimized the BSD 4.2 FFS (Fast FileSystem) by inventing cylinder groups, which break the disk up into smaller chunks, with each group having its own inodes and data blocks.

The intent of BSD FFS is to try to localize associated data blocks and metadata in the same cylinder group; and, ideally, all of the contents of a directory (both data and metadata for all the files) in the same or nearby cylinder group, thus reducing fragmentation caused by scattering a directory's contents over a whole disk.

Some of the performance parameters in the superblock included number of tracks and sectors, disk rotation speed, head speed, and alignment of the sectors between tracks. In a fully optimized system, the head could be moved between close tracks to read scattered sectors from alternating tracks while waiting for the platter to spin around.

As disks grew larger and larger, sector level optimization became obsolete (especially with disks that used linear sector numbering and variable sectors per track). With larger disks and larger files, fragmented reads became more of a problem. To combat this, BSD originally increased the filesystem block size from one sector to one K in 4.0 BSD; and, in FFS, increased the filesystem block size from 1 to 8 K. This has several effects. The chances of a file's sectors being contiguous is much greater. The amount of overhead to list the file blocks is reduced, while the number of bytes representable by any given number of blocks is increased.

Larger disk sizes are also possible, since the maximum number of blocks is limited by a fixed bit-width block number. However, with larger block sizes, disks with many small files will waste space, since each file must occupy at least one block. Because of this, BSD added block level fragmentation, also called block suballocation, tail merging or tail packing, where the last partial block of data from several files may be stored in a single "fragment" block instead of multiple mostly empty blocks. 

Kirk McKusick implemented block reallocation, a technique that reorders the blocks in the filesystem just before the writes are done to reduce fragmentation and control filesystem aging. He also implemented soft updates, a mechanism that maintains the filesystem consistency without limiting the performance in the way the traditional sync mode did. This has the side effect of reducing the requirement of filesystem checking after a crash or power failure. To overcome the remaining issues after a failure, a background fsck utility was introduced.
